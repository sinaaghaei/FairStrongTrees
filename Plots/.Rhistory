file_address = './../Results/EAAMO/Kamiran/tuning/final/igc+igs_relab/german.csv'
}
data= read.csv(file_address, header=FALSE, sep=',', na.strings="", stringsAsFactors =TRUE)
header= read.csv('./../Results/EAAMO/Kamiran/tuning/header.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
names(data) <- names(header)
rm(header)
data$depth <- data$depth + 1
data$approach <- 'IGC+IGS_Relab'
data <- data[,c('approach',"sample",'fair.bound','depth','train.acc','sp.train.pred','test.acc','sp.test.pred',"cal.acc","sp.cal.pred")]
if(data_name == 'compas'){# Kamiran couldn't run depth 6 on kamiran
data <- data[data$depth!=6,]
}
data_kamiran_3 <- cross_validation(data)
rm(data)
data_kamiran_3 <- prepare(data_kamiran_3)
data_kamiran_3$acc <- data_kamiran_3$acc/100
data <- rbind(data_flow, data_kamiran_1, data_kamiran_2,data_kamiran_3)
data <- subset(data, data$fair.bound %in% data_kamiran_3$fair.bound)
data$approach <- as.factor(data$approach)
data$approach<- factor(data$approach, levels = c('FairOCT','IGC_Relab','IGC-IGS_Relab','IGC+IGS_Relab'))
default_plot<- function(data, t_source){
tmp <- subset(data,data$source == t_source)
x_title = ""
y_title= ""
g1 <- ggplot(tmp,aes(x=((disc))*100, y=acc*100)) +
geom_line(aes(linetype=approach), size=3) +
geom_point(aes(color = fair.bound),size=10)+
scale_color_gradient(low="blue", high="red")+
scale_linetype_manual(values=c(1,3,2,4))+
labs(x=x_title, y = y_title, linetype = "Approach", color ='SP Bound')+
# xlim(-7, 17)+
# ylim(50, 85)+
theme(
# plot.title = element_text(size = 25),
axis.text = element_text(size = 45),
legend.position = "right", legend.key.size = unit(2, "cm"),
legend.text = element_text(size = 30),
legend.title = element_text(size = 35),
text = element_text(family=fontfam),
axis.title = element_text(size = 40)
)
figure_path = "./EAAMO/calibration d6/default/"
fig_name = paste('cross_validation_',data_name,'_', t_source,'.pdf', sep = '')
ggsave(paste(figure_path,fig_name,sep = ""),device = "pdf", width = 16, height = 12, units =  "in")#width = 12, height = 8
}
no_circles_plot<- function(data, t_source){
tmp <- subset(data,data$source == t_source)
x_title = ""
y_title= ""
legend_title = 'Approach'
g1 <- ggplot(tmp,aes(x=((disc))*100, y=acc*100)) +
geom_line(aes(linetype=approach,colour=approach), size=3) +
geom_point(size=3)+
scale_linetype_manual(values=c(1,3,2,4))+
labs(x=x_title, y = y_title, color  = legend_title, linetype = legend_title)+#, shape = legend_title
# xlim(-7, 17)+
# ylim(50, 85)+
theme(
# plot.title = element_text(size = 25),
plot.margin = margin(.9, .9, .9, .9, "cm"),
axis.text = element_text(size = 45),
legend.position = "right", legend.key.size = unit(2, "cm"),
legend.text = element_text(size = 30),
legend.title = element_text(size = 35),
text = element_text(family=fontfam),
axis.title = element_text(size = 40)
)
figure_path = "./EAAMO/calibration d6/no circles/"
fig_name = paste('cross_validation_',data_name,'_', t_source,'.pdf', sep = '')
ggsave(paste(figure_path,fig_name,sep = ""),device = "pdf", width = 16, height = 12, units =  "in")#width = 16, height = 12
}
diff_point_shapes_plot<- function(data, t_source){
tmp <- subset(data,data$source == t_source)
x_title = ""
y_title= ""
g1 <- ggplot(tmp,aes(x=((disc))*100, y=acc*100)) +
geom_line(aes(linetype=approach), size=3) +
geom_point(aes(color = fair.bound,shape = approach),size=10)+
scale_color_gradient(low="blue", high="red")+
scale_linetype_manual(values=c(1,3,2,4))+
scale_shape_manual(values=c(15, 16, 17,18))+
labs(x=x_title, y = y_title, color  = 'SP Bound', linetype = 'Approach', shape = 'Approach')+
# xlim(-7, 17)+
# ylim(50, 85)+
theme(
# plot.title = element_text(size = 25),
axis.text = element_text(size = 45),
legend.position = "right", legend.key.size = unit(2, "cm"),
legend.text = element_text(size = 30),
legend.title = element_text(size = 35),
text = element_text(family=fontfam),
axis.title = element_text(size = 40)
)
figure_path = "./EAAMO/calibration d6/different point shapes per approach/"
fig_name = paste('cross_validation_',data_name,'_', t_source,'.pdf', sep = '')
ggsave(paste(figure_path,fig_name,sep = ""),device = "pdf", width = 16, height = 12, units =  "in")#width = 12, height = 8
}
depth_circles_plot<- function(data, t_source){
tmp <- subset(data,data$source == t_source)
x_title = ""
y_title= ""
legend_title = 'Depth'
g1 <- ggplot(tmp,aes(x=((disc))*100, y=acc*100)) +
geom_line(aes(linetype=approach), size=3) +
geom_point(aes(color = depth),size=10)+
scale_color_gradient(low="blue", high="red")+
scale_linetype_manual(values=c(1,3,2,4))+
labs(x=x_title, y = y_title, linetype = "Approach", color =legend_title)+
# xlim(-7, 17)+
# ylim(50, 85)+
theme(
# plot.title = element_text(size = 25),
axis.text = element_text(size = 45),
legend.position = "right", legend.key.size = unit(2, "cm"),
legend.text = element_text(size = 30),
legend.title = element_text(size = 35),
text = element_text(family=fontfam),
axis.title = element_text(size = 40)
)
figure_path = "./EAAMO/calibration d6/depth circles/"
fig_name = paste('cross_validation_',data_name,'_', t_source,'.pdf', sep = '')
ggsave(paste(figure_path,fig_name,sep = ""),device = "pdf", width = 16, height = 12, units =  "in")#width = 12, height = 8
}
# default_plot(data, 'in-sample')
# default_plot(data, 'out-of-sample')
#
# no_circles_plot(data, 'in-sample')
# no_circles_plot(data, 'out-of-sample')
#
# diff_point_shapes_plot(data, 'in-sample')
# diff_point_shapes_plot(data, 'out-of-sample')
#
#
# depth_circles_plot(data, 'in-sample')
# depth_circles_plot(data, 'out-of-sample')
data_flow$x <- data_flow$acc/data_flow$depth
data_kamiran_1$x <- data_kamiran_1$acc/data_kamiran_1$depth
data_kamiran_2$x <- data_kamiran_2$acc/data_kamiran_2$depth
data_kamiran_3$x <- data_kamiran_3$acc/data_kamiran_3$depth
summary(data_flow$x)
summary(data_kamiran_1$x)
summary(data_kamiran_2$x)
summary(data_kamiran_3$x)
knitr::opts_chunk$set(echo = TRUE,message = FALSE,warning = FALSE )
library(kableExtra)
library(png)
library(ggplot2)
library(reshape2)
library(egg)
require(tidyr)
require(dplyr)
library(dplyr)
library(latex2exp)
# library(ggpubr)
library(data.table)
library(RColorBrewer)
library(MASS)
require(scales)
rm(list=ls())
library(extrafont)
fontfam = "sans" #sans serif
data_name = 'compas'
cross_validation <- function (data) {
data$ID <- seq.int(nrow(data))
tmp <- data
tmp$feasibility <- tmp$sp.cal.pred <= tmp$fair.bound
tmp <- tmp[,c('ID','sample', "fair.bound", 'depth' ,"cal.acc", "sp.cal.pred", 'feasibility')]
# First I identify those cases where for a given sample and fairness bound, all depths are infeasible. For these cases we choose the depth with the smallest discrimination:
tmp_false <- subset(tmp, !tmp$feasibility)
tmp_false <- tmp_false %>%
group_by(sample, fair.bound) %>%
summarise(count=n())
if(data_name == 'compas'){# Kamiran can't run depth 6
tmp_false <- subset(tmp_false, tmp_false$count==3)#3,4,5
}else{
tmp_false <- subset(tmp_false, tmp_false$count==4)# 3,4,5,6
}
tmp_all_false <- merge(x = tmp, y=tmp_false, by = c('sample', 'fair.bound'))
rm(tmp_false)
tmp_all_false <- tmp_all_false[order(tmp_all_false$depth),]
tmp_all_false <- tmp_all_false[order(-tmp_all_false$cal.acc),]
tmp_all_false <- tmp_all_false[order(tmp_all_false$sp.cal.pred),]
tmp_all_false <- tmp_all_false[order(-tmp_all_false$feasibility),]
tmp_all_false <- tmp_all_false[order(tmp_all_false$fair.bound),]
tmp_all_false <- tmp_all_false[order(tmp_all_false$sample),]
tmp_all_false$count <- NULL
tmp_all_false <- tmp_all_false[,names(tmp)]
tmp_rest <- tmp %>% anti_join(tmp_all_false)
tmp_all_false <- tmp_all_false %>%
group_by(sample, fair.bound) %>%
mutate(idx = row_number())
tmp_all_false <- subset(tmp_all_false, tmp_all_false$idx==1)
tmp_all_false$idx <- NULL
# For the rest of the cases, for a given sample and fair bound, among the feasible depths, we pick the highest acc and if there's ties we pick the smaller depth
tmp_rest <- tmp_rest[order(tmp_rest$depth),]
tmp_rest <- tmp_rest[order(tmp_rest$sp.cal.pred),]
tmp_rest <- tmp_rest[order(-tmp_rest$cal.acc),]
tmp_rest <- tmp_rest[order(-tmp_rest$feasibility),]
tmp_rest <- tmp_rest[order(tmp_rest$fair.bound),]
tmp_rest <- tmp_rest[order(tmp_rest$sample),]
tmp_rest <- tmp_rest %>%
group_by(sample, fair.bound) %>%
mutate(idx = row_number())
tmp_rest <- subset(tmp_rest, tmp_rest$idx==1)
tmp_rest$idx <- NULL
tmp <- rbind(tmp_rest, tmp_all_false)
rm(tmp_rest, tmp_all_false)
final  <- data
final <- subset(final, final$ID %in% tmp$ID)
final
}
prepare <- function (data) {
tmp <- data[,c("approach",'sample',"depth","fair.bound","train.acc",'test.acc',
"sp.train.pred","sp.test.pred")]
tmp <- tmp %>%
group_by(approach, fair.bound) %>%
summarise(mean(depth),mean(train.acc),mean(test.acc), mean(sp.train.pred),
mean(sp.test.pred))
names(tmp) <- c("approach","fair.bound","depth","train.acc",'test.acc',
"train.disc","test.disc")
tmp$fair.bound <- as.numeric(as.character(tmp$fair.bound))
tmp1 <- tmp[,c("approach","depth","fair.bound","test.acc","test.disc")]
tmp1$source <- 'out-of-sample'
names(tmp1) <- c("approach","depth","fair.bound","acc","disc",'source')
tmp2 <- tmp[,c("approach","depth","fair.bound","train.acc","train.disc")]
tmp2$source <- 'in-sample'
names(tmp2) <- c("approach","depth","fair.bound","acc","disc",'source')
tmp <- rbind(tmp1,tmp2)
tmp
}
if(data_name == 'adult'){
file_address = './../Results/EAAMO/Flow_KamiranVersion_warm (April 19)/calib 1/FlowKamiran_warm_limited-adult-2_d6_calib-1.csv'
}else if(data_name == 'compas'){
file_address = './../Results/EAAMO/Flow_KamiranVersion_warm (April 19)/calib 1/FlowKamiran_warm_compas_d6_calib-1.csv'
}else if(data_name == 'german'){
file_address = './../Results/EAAMO/Flow_KamiranVersion_warm (April 19)/calib 1/FlowKamiran_warm_german_d6_calib-1.csv'
}
data= read.csv(file_address, header=FALSE, sep=',', na.strings="", stringsAsFactors =TRUE)
header= read.csv('./../header_kamiran.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
names(data) <- names(header)
rm(header)
data$sample <- as.factor(data$sample)
# data$depth <- as.factor(data$depth)
data$fair.type <- as.factor(data$fair.type)
# data$fair.bound <- as.factor(data$fair.bound)
tmp_none <- data[data$fair.type == 'None',]
tmp_none$fair.type = 'SP'
data = rbind(data,tmp_none)
data <- data[data$fair.type!= 'None',]
data$fair.type <- droplevels(data$fair.type)
rm(tmp_none)
data <- data[data$depth!=2,]
if(data_name == 'compas'){# Kamiran couldn't run depth 6 on kamiran
data <- data[data$depth!=6,]
}
data_flow <- cross_validation(data)
rm(data)
data_flow$approach <- "FairOCT"
data_flow <- prepare(data_flow)
################################################## (IGC).Relab
if(data_name == 'adult'){
file_address = './../Results/EAAMO/Kamiran/tuning/final/igc_relab/adult.csv'
}else if(data_name == 'compas'){
file_address = './../Results/EAAMO/Kamiran/tuning/final/igc_relab/compas.csv'
}else if(data_name == 'german'){
file_address = './../Results/EAAMO/Kamiran/tuning/final/igc_relab/german.csv'
}
data= read.csv(file_address, header=FALSE, sep=',', na.strings="", stringsAsFactors =TRUE)
header= read.csv('./../Results/EAAMO/Kamiran/tuning/header.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
names(data) <- names(header)
rm(header)
data$depth <- data$depth + 1
data$approach <- 'IGC_Relab'
data <- data[,c('approach',"sample",'fair.bound','depth','train.acc','sp.train.pred','test.acc','sp.test.pred',"cal.acc","sp.cal.pred")]
if(data_name == 'compas'){# Kamiran couldn't run depth 6 on kamiran
data <- data[data$depth!=6,]
}
data_kamiran_1 <- cross_validation(data)
rm(data)
data_kamiran_1 <- prepare(data_kamiran_1)
data_kamiran_1$acc <- data_kamiran_1$acc/100
################################################## (IGC-IGS).Relab
if(data_name == 'adult'){
file_address = './../Results/EAAMO/Kamiran/tuning/final/igc-igs_relab/adult.csv'
}else if(data_name == 'compas'){
file_address = './../Results/EAAMO/Kamiran/tuning/final/igc-igs_relab/compas.csv'
}else if(data_name == 'german'){
file_address = './../Results/EAAMO/Kamiran/tuning/final/igc-igs_relab/german.csv'
}
data= read.csv(file_address, header=FALSE, sep=',', na.strings="", stringsAsFactors =TRUE)
header= read.csv('./../Results/EAAMO/Kamiran/tuning/header.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
names(data) <- names(header)
rm(header)
data$depth <- data$depth + 1
data$approach <- 'IGC-IGS_Relab'
data <- data[,c('approach',"sample",'fair.bound','depth','train.acc','sp.train.pred','test.acc','sp.test.pred',"cal.acc","sp.cal.pred")]
if(data_name == 'compas'){# Kamiran couldn't run depth 6 on kamiran
data <- data[data$depth!=6,]
}
data_kamiran_2 <- cross_validation(data)
rm(data)
data_kamiran_2 <- prepare(data_kamiran_2)
data_kamiran_2$acc <- data_kamiran_2$acc/100
################################################## (IGC+IGS).Relab
if(data_name == 'adult'){
file_address = './../Results/EAAMO/Kamiran/tuning/final/igc+igs_relab/adult.csv'
}else if(data_name == 'compas'){
file_address = './../Results/EAAMO/Kamiran/tuning/final/igc+igs_relab/compas.csv'
}else if(data_name == 'german'){
file_address = './../Results/EAAMO/Kamiran/tuning/final/igc+igs_relab/german.csv'
}
data= read.csv(file_address, header=FALSE, sep=',', na.strings="", stringsAsFactors =TRUE)
header= read.csv('./../Results/EAAMO/Kamiran/tuning/header.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
names(data) <- names(header)
rm(header)
data$depth <- data$depth + 1
data$approach <- 'IGC+IGS_Relab'
data <- data[,c('approach',"sample",'fair.bound','depth','train.acc','sp.train.pred','test.acc','sp.test.pred',"cal.acc","sp.cal.pred")]
if(data_name == 'compas'){# Kamiran couldn't run depth 6 on kamiran
data <- data[data$depth!=6,]
}
data_kamiran_3 <- cross_validation(data)
rm(data)
data_kamiran_3 <- prepare(data_kamiran_3)
data_kamiran_3$acc <- data_kamiran_3$acc/100
data <- rbind(data_flow, data_kamiran_1, data_kamiran_2,data_kamiran_3)
data <- subset(data, data$fair.bound %in% data_kamiran_3$fair.bound)
data$approach <- as.factor(data$approach)
data$approach<- factor(data$approach, levels = c('FairOCT','IGC_Relab','IGC-IGS_Relab','IGC+IGS_Relab'))
default_plot<- function(data, t_source){
tmp <- subset(data,data$source == t_source)
x_title = ""
y_title= ""
g1 <- ggplot(tmp,aes(x=((disc))*100, y=acc*100)) +
geom_line(aes(linetype=approach), size=3) +
geom_point(aes(color = fair.bound),size=10)+
scale_color_gradient(low="blue", high="red")+
scale_linetype_manual(values=c(1,3,2,4))+
labs(x=x_title, y = y_title, linetype = "Approach", color ='SP Bound')+
# xlim(-7, 17)+
# ylim(50, 85)+
theme(
# plot.title = element_text(size = 25),
axis.text = element_text(size = 45),
legend.position = "right", legend.key.size = unit(2, "cm"),
legend.text = element_text(size = 30),
legend.title = element_text(size = 35),
text = element_text(family=fontfam),
axis.title = element_text(size = 40)
)
figure_path = "./EAAMO/calibration d6/default/"
fig_name = paste('cross_validation_',data_name,'_', t_source,'.pdf', sep = '')
ggsave(paste(figure_path,fig_name,sep = ""),device = "pdf", width = 16, height = 12, units =  "in")#width = 12, height = 8
}
no_circles_plot<- function(data, t_source){
tmp <- subset(data,data$source == t_source)
x_title = ""
y_title= ""
legend_title = 'Approach'
g1 <- ggplot(tmp,aes(x=((disc))*100, y=acc*100)) +
geom_line(aes(linetype=approach,colour=approach), size=3) +
geom_point(size=3)+
scale_linetype_manual(values=c(1,3,2,4))+
labs(x=x_title, y = y_title, color  = legend_title, linetype = legend_title)+#, shape = legend_title
# xlim(-7, 17)+
# ylim(50, 85)+
theme(
# plot.title = element_text(size = 25),
plot.margin = margin(2, 2, 2, 2, "cm"),
axis.text = element_text(size = 45),
legend.position = "right", legend.key.size = unit(2, "cm"),
legend.text = element_text(size = 30),
legend.title = element_text(size = 35),
text = element_text(family=fontfam),
axis.title = element_text(size = 40)
)
figure_path = "./EAAMO/calibration d6/no circles/"
fig_name = paste('cross_validation_',data_name,'_', t_source,'.pdf', sep = '')
ggsave(paste(figure_path,fig_name,sep = ""),device = "pdf", width = 16, height = 12, units =  "in")#width = 16, height = 12
}
diff_point_shapes_plot<- function(data, t_source){
tmp <- subset(data,data$source == t_source)
x_title = ""
y_title= ""
g1 <- ggplot(tmp,aes(x=((disc))*100, y=acc*100)) +
geom_line(aes(linetype=approach), size=3) +
geom_point(aes(color = fair.bound,shape = approach),size=10)+
scale_color_gradient(low="blue", high="red")+
scale_linetype_manual(values=c(1,3,2,4))+
scale_shape_manual(values=c(15, 16, 17,18))+
labs(x=x_title, y = y_title, color  = 'SP Bound', linetype = 'Approach', shape = 'Approach')+
# xlim(-7, 17)+
# ylim(50, 85)+
theme(
# plot.title = element_text(size = 25),
axis.text = element_text(size = 45),
legend.position = "right", legend.key.size = unit(2, "cm"),
legend.text = element_text(size = 30),
legend.title = element_text(size = 35),
text = element_text(family=fontfam),
axis.title = element_text(size = 40)
)
figure_path = "./EAAMO/calibration d6/different point shapes per approach/"
fig_name = paste('cross_validation_',data_name,'_', t_source,'.pdf', sep = '')
ggsave(paste(figure_path,fig_name,sep = ""),device = "pdf", width = 16, height = 12, units =  "in")#width = 12, height = 8
}
depth_circles_plot<- function(data, t_source){
tmp <- subset(data,data$source == t_source)
x_title = ""
y_title= ""
legend_title = 'Depth'
g1 <- ggplot(tmp,aes(x=((disc))*100, y=acc*100)) +
geom_line(aes(linetype=approach), size=3) +
geom_point(aes(color = depth),size=10)+
scale_color_gradient(low="blue", high="red")+
scale_linetype_manual(values=c(1,3,2,4))+
labs(x=x_title, y = y_title, linetype = "Approach", color =legend_title)+
# xlim(-7, 17)+
# ylim(50, 85)+
theme(
# plot.title = element_text(size = 25),
axis.text = element_text(size = 45),
legend.position = "right", legend.key.size = unit(2, "cm"),
legend.text = element_text(size = 30),
legend.title = element_text(size = 35),
text = element_text(family=fontfam),
axis.title = element_text(size = 40)
)
figure_path = "./EAAMO/calibration d6/depth circles/"
fig_name = paste('cross_validation_',data_name,'_', t_source,'.pdf', sep = '')
ggsave(paste(figure_path,fig_name,sep = ""),device = "pdf", width = 16, height = 12, units =  "in")#width = 12, height = 8
}
# default_plot(data, 'in-sample')
# default_plot(data, 'out-of-sample')
#
# no_circles_plot(data, 'in-sample')
# no_circles_plot(data, 'out-of-sample')
#
# diff_point_shapes_plot(data, 'in-sample')
# diff_point_shapes_plot(data, 'out-of-sample')
#
#
# depth_circles_plot(data, 'in-sample')
# depth_circles_plot(data, 'out-of-sample')
data_flow$x <- data_flow$acc/data_flow$depth
data_kamiran_1$x <- data_kamiran_1$acc/data_kamiran_1$depth
data_kamiran_2$x <- data_kamiran_2$acc/data_kamiran_2$depth
data_kamiran_3$x <- data_kamiran_3$acc/data_kamiran_3$depth
summary(data_flow$x)
summary(data_kamiran_1$x)
summary(data_kamiran_2$x)
summary(data_kamiran_3$x)
no_circles_plot<- function(data, t_source){
tmp <- subset(data,data$source == t_source)
x_title = ""
y_title= ""
legend_title = 'Approach'
g1 <- ggplot(tmp,aes(x=((disc))*100, y=acc*100)) +
geom_line(aes(linetype=approach,colour=approach), size=3) +
geom_point(size=3)+
scale_linetype_manual(values=c(1,3,2,4))+
labs(x=x_title, y = y_title, color  = legend_title, linetype = legend_title)+#, shape = legend_title
# xlim(-7, 17)+
# ylim(50, 85)+
theme(
# plot.title = element_text(size = 25),
plot.margin = margin(2, 2, 2, 2, "in"),
axis.text = element_text(size = 45),
legend.position = "right", legend.key.size = unit(2, "cm"),
legend.text = element_text(size = 30),
legend.title = element_text(size = 35),
text = element_text(family=fontfam),
axis.title = element_text(size = 40)
)
figure_path = "./EAAMO/calibration d6/no circles/"
fig_name = paste('cross_validation_',data_name,'_', t_source,'.pdf', sep = '')
ggsave(paste(figure_path,fig_name,sep = ""),device = "pdf", width = 16, height = 12, units =  "in")#width = 16, height = 12
}
no_circles_plot<- function(data, t_source){
tmp <- subset(data,data$source == t_source)
x_title = ""
y_title= ""
legend_title = 'Approach'
g1 <- ggplot(tmp,aes(x=((disc))*100, y=acc*100)) +
geom_line(aes(linetype=approach,colour=approach), size=3) +
geom_point(size=3)+
scale_linetype_manual(values=c(1,3,2,4))+
labs(x=x_title, y = y_title, color  = legend_title, linetype = legend_title)+#, shape = legend_title
# xlim(-7, 17)+
# ylim(50, 85)+
theme(
# plot.title = element_text(size = 25),
plot.margin = margin(0.5, 0.5, 0.5, 0.5, "cm"),
axis.text = element_text(size = 45),
legend.position = "right", legend.key.size = unit(2, "cm"),
legend.text = element_text(size = 30),
legend.title = element_text(size = 35),
text = element_text(family=fontfam),
axis.title = element_text(size = 40)
)
figure_path = "./EAAMO/calibration d6/no circles/"
fig_name = paste('cross_validation_',data_name,'_', t_source,'.pdf', sep = '')
ggsave(paste(figure_path,fig_name,sep = ""),device = "pdf", width = 16, height = 12, units =  "in")#width = 16, height = 12
}
default_plot(data, 'in-sample')
default_plot(data, 'out-of-sample')
no_circles_plot(data, 'in-sample')
no_circles_plot(data, 'out-of-sample')
diff_point_shapes_plot(data, 'in-sample')
diff_point_shapes_plot(data, 'out-of-sample')
depth_circles_plot(data, 'in-sample')
depth_circles_plot(data, 'out-of-sample')
