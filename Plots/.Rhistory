data <- data[data$fair.type!= 'None',]
data$fair.type <- droplevels(data$fair.type)
rm(tmp_none)
tmp <- data[,c("approach",'sample',"depth","fair.bound","train.acc",'test.acc',
"sp.train.pred","sp.test.pred")]
tmp <- tmp %>%
group_by(approach,depth, fair.bound) %>%
summarise(mean(train.acc),mean(test.acc), mean(sp.train.pred),
mean(sp.test.pred))
names(tmp) <- c("approach","depth","fair.bound","train.acc",'test.acc',
"train.disc","test.disc")
tmp$fair.bound <- as.numeric(as.character(tmp$fair.bound))
tmp1 <- tmp[,c("approach","depth","fair.bound","test.acc","test.disc")]
tmp1$source <- 'out-of-sample'
names(tmp1) <- c("approach","depth","fair.bound","acc","disc",'source')
tmp2 <- tmp[,c("approach","depth","fair.bound","train.acc","train.disc")]
tmp2$source <- 'in-sample'
names(tmp2) <- c("approach","depth","fair.bound","acc","disc",'source')
tmp <- rbind(tmp1,tmp2)
rm(tmp1,tmp2)
data_flow <- tmp
data_flow$data <- NULL
rm(tmp,data)
knitr::opts_chunk$set(echo = TRUE,message = FALSE,warning = FALSE )
library(kableExtra)
library(png)
library(ggplot2)
library(reshape2)
library(egg)
require(tidyr)
require(dplyr)
library(dplyr)
library(latex2exp)
# library(ggpubr)
library(data.table)
library(RColorBrewer)
library(MASS)
require(scales)
rm(list=ls())
library(extrafont)
data= read.csv('./../Results/Dec 29/FlowOCT Kamiran_version/Kamiran_german.csv', header=FALSE, sep=',', na.strings="", stringsAsFactors =TRUE)
data_name = 'german'
header= read.csv('./../header_kamiran.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
names(data) <- names(header)
rm(header)
fontfam = "sans" #sans serif
figure_path = "./"
data$sample <- as.factor(data$sample)
# data$depth <- as.factor(data$depth)
data$fair.type <- as.factor(data$fair.type)
data$fair.bound <- as.factor(data$fair.bound)
tmp_none <- data[data$fair.type == 'None',]
tmp_none$fair.type = 'SP'
data = rbind(data,tmp_none)
data <- data[data$fair.type!= 'None',]
data$fair.type <- droplevels(data$fair.type)
rm(tmp_none)
tmp <- data[,c("approach",'sample',"depth","fair.bound","train.acc",'test.acc',
"sp.train.pred","sp.test.pred")]
tmp <- tmp %>%
group_by(approach,depth, fair.bound) %>%
summarise(mean(train.acc),mean(test.acc), mean(sp.train.pred),
mean(sp.test.pred))
names(tmp) <- c("approach","depth","fair.bound","train.acc",'test.acc',
"train.disc","test.disc")
tmp$fair.bound <- as.numeric(as.character(tmp$fair.bound))
tmp1 <- tmp[,c("approach","depth","fair.bound","test.acc","test.disc")]
tmp1$source <- 'out-of-sample'
names(tmp1) <- c("approach","depth","fair.bound","acc","disc",'source')
tmp2 <- tmp[,c("approach","depth","fair.bound","train.acc","train.disc")]
tmp2$source <- 'in-sample'
names(tmp2) <- c("approach","depth","fair.bound","acc","disc",'source')
tmp <- rbind(tmp1,tmp2)
rm(tmp1,tmp2)
data_flow <- tmp
data_flow$data <- NULL
rm(tmp,data)
data= read.csv('./../Results/Dec 29/FlowOCT Kamiran_version/Kamiran_german-limited.csv', header=FALSE, sep=',', na.strings="", stringsAsFactors =TRUE)
data_name = 'german'
header= read.csv('./../header_kamiran.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
names(data) <- names(header)
rm(header)
data$sample <- as.factor(data$sample)
# data$depth <- as.factor(data$depth)
data$fair.type <- as.factor(data$fair.type)
data$fair.bound <- as.factor(data$fair.bound)
tmp_none <- data[data$fair.type == 'None',]
tmp_none$fair.type = 'SP'
data = rbind(data,tmp_none)
data <- data[data$fair.type!= 'None',]
data$fair.type <- droplevels(data$fair.type)
rm(tmp_none)
tmp <- data[,c("approach",'sample',"depth","fair.bound","train.acc",'test.acc',
"sp.train.pred","sp.test.pred")]
tmp <- tmp %>%
group_by(approach,depth, fair.bound) %>%
summarise(mean(train.acc),mean(test.acc), mean(sp.train.pred),
mean(sp.test.pred))
names(tmp) <- c("approach","depth","fair.bound","train.acc",'test.acc',
"train.disc","test.disc")
tmp$fair.bound <- as.numeric(as.character(tmp$fair.bound))
tmp1 <- tmp[,c("approach","depth","fair.bound","test.acc","test.disc")]
tmp1$source <- 'out-of-sample'
names(tmp1) <- c("approach","depth","fair.bound","acc","disc",'source')
tmp2 <- tmp[,c("approach","depth","fair.bound","train.acc","train.disc")]
tmp2$source <- 'in-sample'
names(tmp2) <- c("approach","depth","fair.bound","acc","disc",'source')
tmp <- rbind(tmp1,tmp2)
rm(tmp1,tmp2)
data_flow_limited <- tmp
data_flow_limited$data <- NULL
data_flow_limited$approach <- "FlowOCT (limited)"
rm(tmp,data)
data= read.csv('./../Results/Kamiran/german.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
data$depth <- data$depth + 1
data <- data %>%
group_by(depth, fair.bound) %>%
summarise(mean(acc_tr_pre),mean(disc_tr_pre),mean(acc_te_pre), mean(disc_te_pre),
mean(train.acc),mean(sp.train.pred),mean(test.acc),mean(sp.test.pred))
names(data) <- c("depth","fair.bound",'acc_tr_pre','disc_tr_pre','acc_te_pre','disc_te_pre','train.acc','sp.train.pred','test.acc','sp.test.pred')
data$approach <- 'DADT'
data_relab <- data[,c('approach','depth','fair.bound','train.acc','sp.train.pred','test.acc','sp.test.pred')]
# data_relab$approach <- 'Kamiran_relab'
data_relab_train <- data_relab[,c('approach','depth','fair.bound','train.acc','sp.train.pred')]
data_relab_train$source <- 'in-sample'
names(data_relab_train) <- c('approach','depth','fair.bound','acc','disc','source')
data_relab_test <- data_relab[,c('approach','depth','fair.bound','test.acc','sp.test.pred')]
data_relab_test$source <- 'out-of-sample'
names(data_relab_test) <- c('approach','depth','fair.bound','acc','disc','source')
data_relab <- rbind(data_relab_train, data_relab_test)
rm(data_relab_test, data_relab_train)
data_pre <- data[,c('approach','depth','fair.bound','acc_tr_pre','disc_tr_pre','acc_te_pre','disc_te_pre')]
data_pre_train <- data_pre[,c('approach','depth','fair.bound','acc_tr_pre','disc_tr_pre')]
data_pre_train$source <- 'in-sample'
names(data_pre_train) <- c('approach','depth','fair.bound','acc','disc','source')
data_pre_test <- data_pre[,c('approach','depth','fair.bound','acc_te_pre','disc_te_pre')]
data_pre_test$source <- 'out-of-sample'
names(data_pre_test) <- c('approach','depth','fair.bound','acc','disc','source')
data_pre <- rbind(data_pre_train, data_pre_test)
rm(data_pre_test, data_pre_train, data)
data_pre$fair.bound <- 1
data_pre <- unique(data_pre)
# data_kamiran <- rbind(data_pre, data_relab)
data_kamiran <- data_relab
rm(data_pre, data_relab)
data_kamiran$acc <- data_kamiran$acc/100
data <- rbind(data_flow, data_kamiran, data_flow_limited)
data <- subset(data, data$fair.bound %in% data_kamiran$fair.bound)
data$approach <- as.factor(data$approach)
data$approach<- factor(data$approach, levels = c("FlowOCT","FlowOCT (limited)","DADT"))
t_depth = 3
t_source = 'in-sample'
tmp <- subset(data,data$depth ==t_depth & data$source == t_source)
x_title = ""
y_title= ""
legend_title = 'SP Bound'
g1 <- ggplot(tmp,aes(x=((disc))*100, y=acc*100)) +
geom_line(aes(linetype=approach), size=3) +
geom_point(aes(color = fair.bound),size=10)+
scale_color_gradient(low="blue", high="red")+
scale_linetype_manual(values=c(1,3,2))+
labs(x=x_title, y = y_title, linetype = "Data", color =legend_title)+
# xlim(-7, 17)+
# ylim(50, 85)+
theme(
# plot.title = element_text(size = 25),
axis.text = element_text(size = 45),
legend.position = "right", legend.key.size = unit(1, "cm"),
legend.text = element_text(size = 30),
legend.title = element_text(size = 35),
text = element_text(family=fontfam),
axis.title = element_text(size = 40)
)
print(g1)
fig_name = paste('1vs1_',data_name,'_depth_',t_depth,'_', t_source,'.pdf', sep = '')
ggsave(paste(figure_path,fig_name,sep = ""),device = "pdf", width = 16, height = 12, units =  "in")
t_source = 'out-of-sample'
tmp <- subset(data,data$depth ==t_depth & data$source == t_source)
x_title = ""
y_title= ""
legend_title = 'SP Bound'
g1 <- ggplot(tmp,aes(x=((disc))*100, y=acc*100)) +
geom_line(aes(linetype=approach), size=3) +
geom_point(aes(color = fair.bound),size=10)+
scale_color_gradient(low="blue", high="red")+
scale_linetype_manual(values=c(1,3,2))+
labs(x=x_title, y = y_title, linetype = "Data", color =legend_title)+
# xlim(-7, 17)+
# ylim(50, 85)+
theme(
# plot.title = element_text(size = 25),
axis.text = element_text(size = 45),
legend.position = "right", legend.key.size = unit(1, "cm"),
legend.text = element_text(size = 30),
legend.title = element_text(size = 35),
text = element_text(family=fontfam),
axis.title = element_text(size = 40)
)
print(g1)
fig_name = paste('1vs1_',data_name,'_depth_',t_depth,'_', t_source,'.pdf', sep = '')
ggsave(paste(figure_path,fig_name,sep = ""),device = "pdf", width = 16, height = 12, units =  "in")
# if (forpres)
# {
#   ggsave(paste(figure_path,fig_name,sep = ""),device = "pdf", width = 16, height = 12, units =  "in")
# } else {
#   ggsave(paste(figure_path,fig_name,sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
# }
library(kableExtra)
library(png)
library(ggplot2)
library(reshape2)
library(egg)
require(tidyr)
require(dplyr)
library(dplyr)
library(latex2exp)
# library(ggpubr)
library(data.table)
library(RColorBrewer)
library(MASS)
require(scales)
rm(list=ls())
library(extrafont)
data= read.csv('./../Results/EAAMO/Flow_kamiranVersion_warm (April 18)/Kamiran_warm_compas_d_6_start_1.csv', header=FALSE, sep=',', na.strings="", stringsAsFactors =TRUE)
data_name = 'compas'
header= read.csv('./../header_kamiran.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
header= read.csv('./../header_kamiran.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
header= read.csv('./../header_kamiran.csv', header=FALSE, sep=',', na.strings="", stringsAsFactors =TRUE)
header= read.csv('./../header_kamiran.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
View(header)
names(data) <- names(header)
rm(header)
View(data)
fontfam = "sans" #sans serif
figure_path = "./"
data$sample <- as.factor(data$sample)
# data$depth <- as.factor(data$depth)
data$fair.type <- as.factor(data$fair.type)
data$fair.bound <- as.factor(data$fair.bound)
tmp_none <- data[data$fair.type == 'None',]
tmp_none$fair.type = 'SP'
data = rbind(data,tmp_none)
data <- data[data$fair.type!= 'None',]
data$fair.type <- droplevels(data$fair.type)
rm(tmp_none)
View(data)
View(data)
tmp <- data[,c("approach",'sample',"depth","fair.bound","train.acc",'test.acc',
"sp.train.pred","sp.test.pred")]
tmp <- tmp %>%
group_by(approach,depth, fair.bound) %>%
summarise(mean(train.acc),mean(test.acc), mean(sp.train.pred),
mean(sp.test.pred))
View(tmp)
names(tmp) <- c("approach","depth","fair.bound","train.acc",'test.acc',
"train.disc","test.disc")
tmp$fair.bound <- as.numeric(as.character(tmp$fair.bound))
tmp1 <- tmp[,c("approach","depth","fair.bound","test.acc","test.disc")]
tmp1$source <- 'out-of-sample'
names(tmp1) <- c("approach","depth","fair.bound","acc","disc",'source')
tmp2 <- tmp[,c("approach","depth","fair.bound","train.acc","train.disc")]
tmp2$source <- 'in-sample'
names(tmp2) <- c("approach","depth","fair.bound","acc","disc",'source')
tmp <- rbind(tmp1,tmp2)
rm(tmp1,tmp2)
data_flow <- tmp
data_flow$data <- NULL
rm(tmp,data)
View(data_flow)
data= read.csv('./../Results/EAAMO/Flow_kamiranVersion_warm (April 18)/Kamiran_warm_compas_d_6_start_2.csv', header=FALSE, sep=',', na.strings="", stringsAsFactors =TRUE)
header= read.csv('./../header_kamiran.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
names(data) <- names(header)
rm(header)
View(data)
data$sample <- as.factor(data$sample)
# data$depth <- as.factor(data$depth)
data$fair.type <- as.factor(data$fair.type)
data$fair.bound <- as.factor(data$fair.bound)
tmp_none <- data[data$fair.type == 'None',]
tmp_none$fair.type = 'SP'
data = rbind(data,tmp_none)
data <- data[data$fair.type!= 'None',]
data$fair.type <- droplevels(data$fair.type)
rm(tmp_none)
tmp <- data[,c("approach",'sample',"depth","fair.bound","train.acc",'test.acc',
"sp.train.pred","sp.test.pred")]
tmp <- tmp %>%
group_by(approach,depth, fair.bound) %>%
summarise(mean(train.acc),mean(test.acc), mean(sp.train.pred),
mean(sp.test.pred))
names(tmp) <- c("approach","depth","fair.bound","train.acc",'test.acc',
"train.disc","test.disc")
tmp$fair.bound <- as.numeric(as.character(tmp$fair.bound))
tmp1 <- tmp[,c("approach","depth","fair.bound","test.acc","test.disc")]
tmp1$source <- 'out-of-sample'
names(tmp1) <- c("approach","depth","fair.bound","acc","disc",'source')
tmp2 <- tmp[,c("approach","depth","fair.bound","train.acc","train.disc")]
tmp2$source <- 'in-sample'
names(tmp2) <- c("approach","depth","fair.bound","acc","disc",'source')
tmp <- rbind(tmp1,tmp2)
rm(tmp1,tmp2)
data_flow_warm_1 <- data_flow
rm(data_flow)
data_flow_warm_2 <- tmp
View(data_flow_warm_2)
View(data_flow_warm_1)
View(data_flow_warm_2)
data_flow_warm_2$data <- NULL
View(data_flow_warm_2)
data_flow_warm_2$approach <- "FlowOCT (warm 2)"
rm(tmp,data)
View(data_flow_warm_1)
View(data_flow_warm_2)
data_flow_warm_1$approach <- "FlowOCT (warm 1)"
View(data_flow_warm_1)
View(data_flow_warm_2)
data= read.csv('./../Results/Kamiran/compas.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
data= read.csv('./../Results/Facct 2022 Final/Kamiran/compas.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
data$depth <- data$depth + 1
data <- data %>%
group_by(depth, fair.bound) %>%
summarise(mean(acc_tr_pre),mean(disc_tr_pre),mean(acc_te_pre), mean(disc_te_pre),
mean(train.acc),mean(sp.train.pred),mean(test.acc),mean(sp.test.pred))
names(data) <- c("depth","fair.bound",'acc_tr_pre','disc_tr_pre','acc_te_pre','disc_te_pre','train.acc','sp.train.pred','test.acc','sp.test.pred')
data$approach <- 'DADT'
data_relab <- data[,c('approach','depth','fair.bound','train.acc','sp.train.pred','test.acc','sp.test.pred')]
data_relab_train <- data_relab[,c('approach','depth','fair.bound','train.acc','sp.train.pred')]
data_relab_train$source <- 'in-sample'
names(data_relab_train) <- c('approach','depth','fair.bound','acc','disc','source')
data_relab_test <- data_relab[,c('approach','depth','fair.bound','test.acc','sp.test.pred')]
data_relab_test$source <- 'out-of-sample'
names(data_relab_test) <- c('approach','depth','fair.bound','acc','disc','source')
data_relab <- rbind(data_relab_train, data_relab_test)
rm(data_relab_test, data_relab_train)
data_pre <- data[,c('approach','depth','fair.bound','acc_tr_pre','disc_tr_pre','acc_te_pre','disc_te_pre')]
data_pre_train <- data_pre[,c('approach','depth','fair.bound','acc_tr_pre','disc_tr_pre')]
data_pre_train$source <- 'in-sample'
names(data_pre_train) <- c('approach','depth','fair.bound','acc','disc','source')
data_pre_test <- data_pre[,c('approach','depth','fair.bound','acc_te_pre','disc_te_pre')]
data_pre_test$source <- 'out-of-sample'
names(data_pre_test) <- c('approach','depth','fair.bound','acc','disc','source')
data_pre <- rbind(data_pre_train, data_pre_test)
rm(data_pre_test, data_pre_train, data)
data_pre$fair.bound <- 1
data_pre <- unique(data_pre)
# data_kamiran <- rbind(data_pre, data_relab)
data_kamiran <- data_relab
rm(data_pre, data_relab)
data_kamiran$acc <- data_kamiran$acc/100
data <- rbind(data_flow_warm_1, data_kamiran, data_flow_warm_2)
data <- subset(data, data$fair.bound %in% data_kamiran$fair.bound)
data$approach <- as.factor(data$approach)
levels(data$approach)
data$approach<- factor(data$approach, levels = c("FlowOCT (warm 1)","FlowOCT (warm 2)","DADT"))
View(data_flow_warm_2)
t_depth = 3
t_source = 'in-sample'
tmp <- subset(data,data$depth ==t_depth & data$source == t_source)
t_source = 'in-sample'
tmp <- subset(data,data$depth %in% c(3,6) & data$source == t_source)
x_title = ""
y_title= ""
legend_title = 'SP Bound'
g1 <- ggplot(tmp,aes(x=((disc))*100, y=acc*100)) +
geom_line(aes(linetype=approach), size=3) +
geom_point(aes(color = fair.bound),size=10)+
scale_color_gradient(low="blue", high="red")+
scale_linetype_manual(values=c(1,3,2))+
labs(x=x_title, y = y_title, linetype = "Data", color =legend_title)+
# xlim(-7, 17)+
# ylim(50, 85)+
theme(
# plot.title = element_text(size = 25),
axis.text = element_text(size = 45),
legend.position = "right", legend.key.size = unit(1, "cm"),
legend.text = element_text(size = 30),
legend.title = element_text(size = 35),
text = element_text(family=fontfam),
axis.title = element_text(size = 40)
)
print(g1)
fig_name = 'warm_results'
ggsave(paste(figure_path,fig_name,sep = ""),device = "pdf", width = 16, height = 12, units =  "in")
fig_name = 'warm_results.pdf'
ggsave(paste(figure_path,fig_name,sep = ""),device = "pdf", width = 16, height = 12, units =  "in")
t_source = 'out-of-sample'
tmp <- subset(data,data$depth %in% c(3,6) & data$source == t_source)
x_title = ""
y_title= ""
legend_title = 'SP Bound'
g1 <- ggplot(tmp,aes(x=((disc))*100, y=acc*100)) +
geom_line(aes(linetype=approach), size=3) +
geom_point(aes(color = fair.bound),size=10)+
scale_color_gradient(low="blue", high="red")+
scale_linetype_manual(values=c(1,3,2))+
labs(x=x_title, y = y_title, linetype = "Data", color =legend_title)+
# xlim(-7, 17)+
# ylim(50, 85)+
theme(
# plot.title = element_text(size = 25),
axis.text = element_text(size = 45),
legend.position = "right", legend.key.size = unit(1, "cm"),
legend.text = element_text(size = 30),
legend.title = element_text(size = 35),
text = element_text(family=fontfam),
axis.title = element_text(size = 40)
)
print(g1)
fig_name = 'warm_out-of-sample-results.pdf'
ggsave(paste(figure_path,fig_name,sep = ""),device = "pdf", width = 16, height = 12, units =  "in")
knitr::opts_chunk$set(echo = TRUE,message = FALSE,warning = FALSE )
library(kableExtra)
library(png)
library(ggplot2)
library(reshape2)
library(egg)
require(tidyr)
require(dplyr)
library(latex2exp)
# library(ggpubr)
library(data.table)
library(RColorBrewer)
library(MASS)
require(scales)
library(tidyverse)
library(ROCR)
library(pROC)
library(missForest)
library(Publish)
library(caret)
library(sigmoid)
library(rpart)
library(caret)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
library(caTools)
library(randomForest)
library(graphics)
library(reticulate)
rm(list = ls())
cat("\014")
graphics.off()
data <- read.csv("./PHEBE_GROUP_FORMAT.csv",na.strings=c("-999",NA))
knitr::opts_chunk$set(echo = TRUE,message = FALSE,warning = FALSE )
library(kableExtra)
library(png)
library(ggplot2)
library(reshape2)
library(egg)
require(tidyr)
require(dplyr)
library(latex2exp)
# library(ggpubr)
library(data.table)
library(RColorBrewer)
library(MASS)
require(scales)
library(tidyverse)
library(ROCR)
library(pROC)
library(missForest)
library(Publish)
library(caret)
library(sigmoid)
library(rpart)
library(caret)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
library(caTools)
library(randomForest)
library(graphics)
library(reticulate)
rm(list = ls())
cat("\014")
graphics.off()
data <- read.csv("./Davis-SubstanceUsePrevention/data_substance_use.csv",na.strings=c("-999",NA))
data <- unique(data)
View(data)
regions <- read.csv("./Davis-SubstanceUsePrevention/state regions.csv")
regions <- regions[,c('Postal', 'Region')]
data$City <- NULL
data$zipcode <- NULL
data <- merge(x= data, y = regions, by.x = 'State', by.y = 'Postal')
data$State <- NULL
rm(regions)
no_grouped_cols <- c('SFS8p_0','TRI_0' ,'TMI_0', 'SES_0', 'PMS20', 'phpi18', 'GVS', 'DSS9_0', 'EPS7p_0', 'PSSI_0', 'OSSI_0', 'SSEI_0', 'GSSI_0', 'SSSI_0', 'GSI_0', 'GCS_0', 'RERI13p_0')
data <- data[,!(names(data) %in% no_grouped_cols)]
rm(no_grouped_cols)
col_to_remove <- c('SFS8p_3', 'SFS8p_6', 'SFS8p_12',
'SFSg_6', 'SFSg_12',
'S2a1_3', 'S2a1_6', 'S2a1_12',
'S2c1_3', 'S2c1_6', 'S2c1_12',
'S2g1_3', 'S2g1_6', 'S2g1_12',
'S2j1_3', 'S2j1_6', 'S2j1_12',
'S2d1_3', 'S2d1_6', 'S2d1_12',
'S2e1_3', 'S2e1_6', 'S2e1_12',
'S2p1_3', 'S2p1_6', 'S2p1_12',
'S2pa1_3', 'S2pa1_6', 'S2pa1_12')
data <- data[,!(names(data) %in% col_to_remove)]
rm(col_to_remove)
tmp <- data
tmp$txtypeg <- as.factor(tmp$txtypeg)
levels(tmp$txtypeg) <- c('ACRA', 'MET/CBT', 'seven_challenges', 'MDFT', 'other_EBT', 'specific_manualized_program','other')
summary(tmp$txtypeg)
rm(tmp)
data <- subset(data, !is.na(data$txtypeg) & (data$txtypeg %in% c(1,2,7))) # 1,2,4,7
View(data)
View(data)
View(data)
View(data)
