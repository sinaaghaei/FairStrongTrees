mean(EOpp.test.pred),
mean(EOdds.train.pred),
mean(EOdds.test.pred))
names(tmp) <- c("approach","data","depth","fair.type","fair.bound","train.acc",'test.acc',
"train.data.sp","train.pred.sp","test.data.sp","test.pred.sp",
"train.data.csp","train.pred.csp","test.data.csp","test.pred.csp",
"train.pred.pe","test.pred.pe",
"train.pred.EOpp","test.pred.EOpp",
"train.pred.EOdds","test.pred.EOdds")
metric = 'EOdds'
if(metric == 'SP'){
tmp <- subset(tmp, tmp$fair.type == metric)
tmp <- tmp[c("approach","data","depth","fair.type","fair.bound","test.acc",'train.acc',
'test.pred.sp','train.pred.sp')]
}else if(metric == 'CSP'){
tmp <- subset(tmp, tmp$fair.type == metric)
tmp <- tmp[c("approach","data","depth","fair.type","fair.bound","test.acc",'train.acc',
'test.pred.csp','train.pred.csp')]
}else if(metric == 'PE'){
tmp <- subset(tmp, tmp$fair.type == metric)
tmp <- tmp[c("approach","data","depth","fair.type","fair.bound","test.acc",'train.acc',
'test.pred.pe','train.pred.pe')]
}else if(metric == 'EOpp'){
tmp <- subset(tmp, tmp$fair.type == metric)
tmp <- tmp[c("approach","data","depth","fair.type","fair.bound","test.acc",'train.acc',
'test.pred.EOpp','train.pred.EOpp')]
}else if(metric == 'EOdds'){
tmp <- subset(tmp, tmp$fair.type == metric)
tmp <- tmp[c("approach","data","depth","fair.type","fair.bound","test.acc",'train.acc',
'test.pred.EOdds','train.pred.EOdds')]
}
names(tmp) <- c("approach","data","depth","fair.type","fair.bound","test.acc","train.acc","test.pred.disc","train.pred.disc")
tmp$fair.type <- factor(tmp$fair.type, levels = c('SP','CSP','PE','EOpp','EOdds'))
tmp$fair.bound <- as.numeric(as.character(tmp$fair.bound))
tmp1 <- tmp[,c("approach","data","depth","fair.type","fair.bound","test.acc","test.pred.disc")]
tmp1$source <- 'out-of-sample'
names(tmp1) <- c("approach","data","depth","fair.type","fair.bound","acc","disc",'source')
tmp2 <- tmp[,c("approach","data","depth","fair.type","fair.bound","train.acc","train.pred.disc")]
tmp2$source <- 'in-sample'
names(tmp2) <- c("approach","data","depth","fair.type","fair.bound","acc","disc",'source')
tmp <- rbind(tmp1,tmp2)
rm(tmp1,tmp2)
tmp <- subset(tmp,tmp$depth ==2)
g1 <- ggplot(data = subset(tmp,tmp$depth ==2),aes(x=(disc)*100, y=acc*100)) +
geom_line(aes(linetype=source), size=3) +
geom_point(aes(color = fair.bound),size=10)+
scale_color_gradient(low="blue", high="red")+
labs(x="Conditional Statisitical Parity (%)", y = "Accuracy (%)", linetype = "Data", color = 'CSP Bound')+
theme(
# plot.title = element_text(size = 25),
axis.text = element_text(size = 30),
legend.position = "right", legend.key.size = unit(1, "cm"),
legend.text = element_text(size = 30),
legend.title = element_text(size = 35),
text = element_text(family=fontfam),
axis.title = element_text(size = 40)
)
print(g1)
if (forpres)
{
ggsave(paste(figure_path,"fig.pdf",sep = ""),device = "pdf", width = 16, height = 12, units =  "in")
} else {
ggsave(paste(figure_path,"fig.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
}
knitr::opts_chunk$set(echo = TRUE,message = FALSE,warning = FALSE )
library(kableExtra)
library(png)
library(ggplot2)
library(reshape2)
library(egg)
require(tidyr)
require(dplyr)
library(dplyr)
library(latex2exp)
# library(ggpubr)
library(data.table)
library(RColorBrewer)
library(MASS)
require(scales)
rm(list=ls())
# data1= read.csv('./../DataSets/compas.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
data= read.csv('./../Results/June 16/compas_june_16.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
# data = data[data$sample %in% c(2) ,]
# data = data[data$fair.bound!=1,]
forpres=TRUE
if (forpres){
fontfam = "sans"
} else {
fontfam = "serif"
}
figure_path = "./"
data$sample <- as.factor(data$sample)
data$depth <- as.factor(data$depth)
data$fair.type <- as.factor(data$fair.type)
data$fair.bound <- as.factor(data$fair.bound)
for(i in c('SP','CSP','PE','EOpp','EOdds')){
tmp_none <- data[data$fair.type == 'None',]
tmp_none$fair.type = i
data = rbind(data,tmp_none)
}
data <- data[data$fair.type!= 'None',]
rm(tmp_none)
tmp <- data
tmp <- tmp %>%
group_by(approach,data,depth, fair.type, fair.bound) %>%
summarise(mean(train.acc),mean(test.acc),mean(sp.train.data), mean(sp.train.pred),
mean(sp.test.data),mean(sp.test.pred),
mean(csp.train.data), mean(csp.train.pred),
mean(csp.test.data),mean(csp.test.pred),
mean(pe.train.pred),
mean(pe.test.pred),
mean(EOpp.train.pred),
mean(EOpp.test.pred),
mean(EOdds.train.pred),
mean(EOdds.test.pred))
names(tmp) <- c("approach","data","depth","fair.type","fair.bound","train.acc",'test.acc',
"train.data.sp","train.pred.sp","test.data.sp","test.pred.sp",
"train.data.csp","train.pred.csp","test.data.csp","test.pred.csp",
"train.pred.pe","test.pred.pe",
"train.pred.EOpp","test.pred.EOpp",
"train.pred.EOdds","test.pred.EOdds")
metric = 'EOpp'
if(metric == 'SP'){
tmp <- subset(tmp, tmp$fair.type == metric)
tmp <- tmp[c("approach","data","depth","fair.type","fair.bound","test.acc",'train.acc',
'test.pred.sp','train.pred.sp')]
}else if(metric == 'CSP'){
tmp <- subset(tmp, tmp$fair.type == metric)
tmp <- tmp[c("approach","data","depth","fair.type","fair.bound","test.acc",'train.acc',
'test.pred.csp','train.pred.csp')]
}else if(metric == 'PE'){
tmp <- subset(tmp, tmp$fair.type == metric)
tmp <- tmp[c("approach","data","depth","fair.type","fair.bound","test.acc",'train.acc',
'test.pred.pe','train.pred.pe')]
}else if(metric == 'EOpp'){
tmp <- subset(tmp, tmp$fair.type == metric)
tmp <- tmp[c("approach","data","depth","fair.type","fair.bound","test.acc",'train.acc',
'test.pred.EOpp','train.pred.EOpp')]
}else if(metric == 'EOdds'){
tmp <- subset(tmp, tmp$fair.type == metric)
tmp <- tmp[c("approach","data","depth","fair.type","fair.bound","test.acc",'train.acc',
'test.pred.EOdds','train.pred.EOdds')]
}
names(tmp) <- c("approach","data","depth","fair.type","fair.bound","test.acc","train.acc","test.pred.disc","train.pred.disc")
tmp$fair.type <- factor(tmp$fair.type, levels = c('SP','CSP','PE','EOpp','EOdds'))
tmp$fair.bound <- as.numeric(as.character(tmp$fair.bound))
tmp1 <- tmp[,c("approach","data","depth","fair.type","fair.bound","test.acc","test.pred.disc")]
tmp1$source <- 'out-of-sample'
names(tmp1) <- c("approach","data","depth","fair.type","fair.bound","acc","disc",'source')
tmp2 <- tmp[,c("approach","data","depth","fair.type","fair.bound","train.acc","train.pred.disc")]
tmp2$source <- 'in-sample'
names(tmp2) <- c("approach","data","depth","fair.type","fair.bound","acc","disc",'source')
tmp <- rbind(tmp1,tmp2)
rm(tmp1,tmp2)
tmp <- subset(tmp,tmp$depth ==2)
g1 <- ggplot(data = subset(tmp,tmp$depth ==2),aes(x=(disc)*100, y=acc*100)) +
geom_line(aes(linetype=source), size=3) +
geom_point(aes(color = fair.bound),size=10)+
scale_color_gradient(low="blue", high="red")+
labs(x="Conditional Statisitical Parity (%)", y = "Accuracy (%)", linetype = "Data", color = 'CSP Bound')+
theme(
# plot.title = element_text(size = 25),
axis.text = element_text(size = 30),
legend.position = "right", legend.key.size = unit(1, "cm"),
legend.text = element_text(size = 30),
legend.title = element_text(size = 35),
text = element_text(family=fontfam),
axis.title = element_text(size = 40)
)
print(g1)
if (forpres)
{
ggsave(paste(figure_path,"fig.pdf",sep = ""),device = "pdf", width = 16, height = 12, units =  "in")
} else {
ggsave(paste(figure_path,"fig.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
}
knitr::opts_chunk$set(echo = TRUE,message = FALSE,warning = FALSE )
library(kableExtra)
library(png)
library(ggplot2)
library(reshape2)
library(egg)
require(tidyr)
require(dplyr)
library(dplyr)
library(latex2exp)
# library(ggpubr)
library(data.table)
library(RColorBrewer)
library(MASS)
require(scales)
rm(list=ls())
# data1= read.csv('./../DataSets/compas.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
data= read.csv('./../Results/June 16/compas_june_16.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
# data = data[data$sample %in% c(2) ,]
# data = data[data$fair.bound!=1,]
forpres=TRUE
if (forpres){
fontfam = "sans"
} else {
fontfam = "serif"
}
figure_path = "./"
data$sample <- as.factor(data$sample)
data$depth <- as.factor(data$depth)
data$fair.type <- as.factor(data$fair.type)
data$fair.bound <- as.factor(data$fair.bound)
for(i in c('SP','CSP','PE','EOpp','EOdds')){
tmp_none <- data[data$fair.type == 'None',]
tmp_none$fair.type = i
data = rbind(data,tmp_none)
}
data <- data[data$fair.type!= 'None',]
rm(tmp_none)
tmp <- data
tmp <- tmp %>%
group_by(approach,data,depth, fair.type, fair.bound) %>%
summarise(mean(train.acc),mean(test.acc),mean(sp.train.data), mean(sp.train.pred),
mean(sp.test.data),mean(sp.test.pred),
mean(csp.train.data), mean(csp.train.pred),
mean(csp.test.data),mean(csp.test.pred),
mean(pe.train.pred),
mean(pe.test.pred),
mean(EOpp.train.pred),
mean(EOpp.test.pred),
mean(EOdds.train.pred),
mean(EOdds.test.pred))
names(tmp) <- c("approach","data","depth","fair.type","fair.bound","train.acc",'test.acc',
"train.data.sp","train.pred.sp","test.data.sp","test.pred.sp",
"train.data.csp","train.pred.csp","test.data.csp","test.pred.csp",
"train.pred.pe","test.pred.pe",
"train.pred.EOpp","test.pred.EOpp",
"train.pred.EOdds","test.pred.EOdds")
metric = 'PE'
if(metric == 'SP'){
tmp <- subset(tmp, tmp$fair.type == metric)
tmp <- tmp[c("approach","data","depth","fair.type","fair.bound","test.acc",'train.acc',
'test.pred.sp','train.pred.sp')]
}else if(metric == 'CSP'){
tmp <- subset(tmp, tmp$fair.type == metric)
tmp <- tmp[c("approach","data","depth","fair.type","fair.bound","test.acc",'train.acc',
'test.pred.csp','train.pred.csp')]
}else if(metric == 'PE'){
tmp <- subset(tmp, tmp$fair.type == metric)
tmp <- tmp[c("approach","data","depth","fair.type","fair.bound","test.acc",'train.acc',
'test.pred.pe','train.pred.pe')]
}else if(metric == 'EOpp'){
tmp <- subset(tmp, tmp$fair.type == metric)
tmp <- tmp[c("approach","data","depth","fair.type","fair.bound","test.acc",'train.acc',
'test.pred.EOpp','train.pred.EOpp')]
}else if(metric == 'EOdds'){
tmp <- subset(tmp, tmp$fair.type == metric)
tmp <- tmp[c("approach","data","depth","fair.type","fair.bound","test.acc",'train.acc',
'test.pred.EOdds','train.pred.EOdds')]
}
names(tmp) <- c("approach","data","depth","fair.type","fair.bound","test.acc","train.acc","test.pred.disc","train.pred.disc")
tmp$fair.type <- factor(tmp$fair.type, levels = c('SP','CSP','PE','EOpp','EOdds'))
tmp$fair.bound <- as.numeric(as.character(tmp$fair.bound))
tmp1 <- tmp[,c("approach","data","depth","fair.type","fair.bound","test.acc","test.pred.disc")]
tmp1$source <- 'out-of-sample'
names(tmp1) <- c("approach","data","depth","fair.type","fair.bound","acc","disc",'source')
tmp2 <- tmp[,c("approach","data","depth","fair.type","fair.bound","train.acc","train.pred.disc")]
tmp2$source <- 'in-sample'
names(tmp2) <- c("approach","data","depth","fair.type","fair.bound","acc","disc",'source')
tmp <- rbind(tmp1,tmp2)
rm(tmp1,tmp2)
tmp <- subset(tmp,tmp$depth ==2)
g1 <- ggplot(data = subset(tmp,tmp$depth ==2),aes(x=(disc)*100, y=acc*100)) +
geom_line(aes(linetype=source), size=3) +
geom_point(aes(color = fair.bound),size=10)+
scale_color_gradient(low="blue", high="red")+
labs(x="Conditional Statisitical Parity (%)", y = "Accuracy (%)", linetype = "Data", color = 'CSP Bound')+
theme(
# plot.title = element_text(size = 25),
axis.text = element_text(size = 30),
legend.position = "right", legend.key.size = unit(1, "cm"),
legend.text = element_text(size = 30),
legend.title = element_text(size = 35),
text = element_text(family=fontfam),
axis.title = element_text(size = 40)
)
print(g1)
if (forpres)
{
ggsave(paste(figure_path,"fig.pdf",sep = ""),device = "pdf", width = 16, height = 12, units =  "in")
} else {
ggsave(paste(figure_path,"fig.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
}
knitr::opts_chunk$set(echo = TRUE,message = FALSE,warning = FALSE )
library(kableExtra)
library(png)
library(ggplot2)
library(reshape2)
library(egg)
require(tidyr)
require(dplyr)
library(dplyr)
library(latex2exp)
# library(ggpubr)
library(data.table)
library(RColorBrewer)
library(MASS)
require(scales)
rm(list=ls())
# data1= read.csv('./../DataSets/compas.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
data= read.csv('./../Results/June 16/compas_june_16.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
# data = data[data$sample %in% c(2) ,]
# data = data[data$fair.bound!=1,]
forpres=TRUE
if (forpres){
fontfam = "sans"
} else {
fontfam = "serif"
}
figure_path = "./"
data$sample <- as.factor(data$sample)
data$depth <- as.factor(data$depth)
data$fair.type <- as.factor(data$fair.type)
data$fair.bound <- as.factor(data$fair.bound)
for(i in c('SP','CSP','PE','EOpp','EOdds')){
tmp_none <- data[data$fair.type == 'None',]
tmp_none$fair.type = i
data = rbind(data,tmp_none)
}
data <- data[data$fair.type!= 'None',]
rm(tmp_none)
tmp <- data
tmp <- tmp %>%
group_by(approach,data,depth, fair.type, fair.bound) %>%
summarise(mean(train.acc),mean(test.acc),mean(sp.train.data), mean(sp.train.pred),
mean(sp.test.data),mean(sp.test.pred),
mean(csp.train.data), mean(csp.train.pred),
mean(csp.test.data),mean(csp.test.pred),
mean(pe.train.pred),
mean(pe.test.pred),
mean(EOpp.train.pred),
mean(EOpp.test.pred),
mean(EOdds.train.pred),
mean(EOdds.test.pred))
names(tmp) <- c("approach","data","depth","fair.type","fair.bound","train.acc",'test.acc',
"train.data.sp","train.pred.sp","test.data.sp","test.pred.sp",
"train.data.csp","train.pred.csp","test.data.csp","test.pred.csp",
"train.pred.pe","test.pred.pe",
"train.pred.EOpp","test.pred.EOpp",
"train.pred.EOdds","test.pred.EOdds")
metric = 'CSP'
if(metric == 'SP'){
tmp <- subset(tmp, tmp$fair.type == metric)
tmp <- tmp[c("approach","data","depth","fair.type","fair.bound","test.acc",'train.acc',
'test.pred.sp','train.pred.sp')]
}else if(metric == 'CSP'){
tmp <- subset(tmp, tmp$fair.type == metric)
tmp <- tmp[c("approach","data","depth","fair.type","fair.bound","test.acc",'train.acc',
'test.pred.csp','train.pred.csp')]
}else if(metric == 'PE'){
tmp <- subset(tmp, tmp$fair.type == metric)
tmp <- tmp[c("approach","data","depth","fair.type","fair.bound","test.acc",'train.acc',
'test.pred.pe','train.pred.pe')]
}else if(metric == 'EOpp'){
tmp <- subset(tmp, tmp$fair.type == metric)
tmp <- tmp[c("approach","data","depth","fair.type","fair.bound","test.acc",'train.acc',
'test.pred.EOpp','train.pred.EOpp')]
}else if(metric == 'EOdds'){
tmp <- subset(tmp, tmp$fair.type == metric)
tmp <- tmp[c("approach","data","depth","fair.type","fair.bound","test.acc",'train.acc',
'test.pred.EOdds','train.pred.EOdds')]
}
names(tmp) <- c("approach","data","depth","fair.type","fair.bound","test.acc","train.acc","test.pred.disc","train.pred.disc")
tmp$fair.type <- factor(tmp$fair.type, levels = c('SP','CSP','PE','EOpp','EOdds'))
tmp$fair.bound <- as.numeric(as.character(tmp$fair.bound))
tmp1 <- tmp[,c("approach","data","depth","fair.type","fair.bound","test.acc","test.pred.disc")]
tmp1$source <- 'out-of-sample'
names(tmp1) <- c("approach","data","depth","fair.type","fair.bound","acc","disc",'source')
tmp2 <- tmp[,c("approach","data","depth","fair.type","fair.bound","train.acc","train.pred.disc")]
tmp2$source <- 'in-sample'
names(tmp2) <- c("approach","data","depth","fair.type","fair.bound","acc","disc",'source')
tmp <- rbind(tmp1,tmp2)
rm(tmp1,tmp2)
tmp <- subset(tmp,tmp$depth ==2)
g1 <- ggplot(data = subset(tmp,tmp$depth ==2),aes(x=(disc)*100, y=acc*100)) +
geom_line(aes(linetype=source), size=3) +
geom_point(aes(color = fair.bound),size=10)+
scale_color_gradient(low="blue", high="red")+
labs(x="Conditional Statisitical Parity (%)", y = "Accuracy (%)", linetype = "Data", color = 'CSP Bound')+
theme(
# plot.title = element_text(size = 25),
axis.text = element_text(size = 30),
legend.position = "right", legend.key.size = unit(1, "cm"),
legend.text = element_text(size = 30),
legend.title = element_text(size = 35),
text = element_text(family=fontfam),
axis.title = element_text(size = 40)
)
print(g1)
if (forpres)
{
ggsave(paste(figure_path,"fig.pdf",sep = ""),device = "pdf", width = 16, height = 12, units =  "in")
} else {
ggsave(paste(figure_path,"fig.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
}
knitr::opts_chunk$set(echo = TRUE,message = FALSE,warning = FALSE )
library(kableExtra)
library(png)
library(ggplot2)
library(reshape2)
library(egg)
require(tidyr)
require(dplyr)
library(dplyr)
library(latex2exp)
# library(ggpubr)
library(data.table)
library(RColorBrewer)
library(MASS)
require(scales)
rm(list=ls())
# data1= read.csv('./../DataSets/compas.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
data= read.csv('./../Results/June 16/compas_june_16.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
# data = data[data$sample %in% c(2) ,]
# data = data[data$fair.bound!=1,]
forpres=TRUE
if (forpres){
fontfam = "sans"
} else {
fontfam = "serif"
}
figure_path = "./"
data$sample <- as.factor(data$sample)
data$depth <- as.factor(data$depth)
data$fair.type <- as.factor(data$fair.type)
data$fair.bound <- as.factor(data$fair.bound)
for(i in c('SP','CSP','PE','EOpp','EOdds')){
tmp_none <- data[data$fair.type == 'None',]
tmp_none$fair.type = i
data = rbind(data,tmp_none)
}
data <- data[data$fair.type!= 'None',]
rm(tmp_none)
tmp <- data
tmp <- tmp %>%
group_by(approach,data,depth, fair.type, fair.bound) %>%
summarise(mean(train.acc),mean(test.acc),mean(sp.train.data), mean(sp.train.pred),
mean(sp.test.data),mean(sp.test.pred),
mean(csp.train.data), mean(csp.train.pred),
mean(csp.test.data),mean(csp.test.pred),
mean(pe.train.pred),
mean(pe.test.pred),
mean(EOpp.train.pred),
mean(EOpp.test.pred),
mean(EOdds.train.pred),
mean(EOdds.test.pred))
names(tmp) <- c("approach","data","depth","fair.type","fair.bound","train.acc",'test.acc',
"train.data.sp","train.pred.sp","test.data.sp","test.pred.sp",
"train.data.csp","train.pred.csp","test.data.csp","test.pred.csp",
"train.pred.pe","test.pred.pe",
"train.pred.EOpp","test.pred.EOpp",
"train.pred.EOdds","test.pred.EOdds")
metric = 'SP'
if(metric == 'SP'){
tmp <- subset(tmp, tmp$fair.type == metric)
tmp <- tmp[c("approach","data","depth","fair.type","fair.bound","test.acc",'train.acc',
'test.pred.sp','train.pred.sp')]
}else if(metric == 'CSP'){
tmp <- subset(tmp, tmp$fair.type == metric)
tmp <- tmp[c("approach","data","depth","fair.type","fair.bound","test.acc",'train.acc',
'test.pred.csp','train.pred.csp')]
}else if(metric == 'PE'){
tmp <- subset(tmp, tmp$fair.type == metric)
tmp <- tmp[c("approach","data","depth","fair.type","fair.bound","test.acc",'train.acc',
'test.pred.pe','train.pred.pe')]
}else if(metric == 'EOpp'){
tmp <- subset(tmp, tmp$fair.type == metric)
tmp <- tmp[c("approach","data","depth","fair.type","fair.bound","test.acc",'train.acc',
'test.pred.EOpp','train.pred.EOpp')]
}else if(metric == 'EOdds'){
tmp <- subset(tmp, tmp$fair.type == metric)
tmp <- tmp[c("approach","data","depth","fair.type","fair.bound","test.acc",'train.acc',
'test.pred.EOdds','train.pred.EOdds')]
}
names(tmp) <- c("approach","data","depth","fair.type","fair.bound","test.acc","train.acc","test.pred.disc","train.pred.disc")
tmp$fair.type <- factor(tmp$fair.type, levels = c('SP','CSP','PE','EOpp','EOdds'))
tmp$fair.bound <- as.numeric(as.character(tmp$fair.bound))
tmp1 <- tmp[,c("approach","data","depth","fair.type","fair.bound","test.acc","test.pred.disc")]
tmp1$source <- 'out-of-sample'
names(tmp1) <- c("approach","data","depth","fair.type","fair.bound","acc","disc",'source')
tmp2 <- tmp[,c("approach","data","depth","fair.type","fair.bound","train.acc","train.pred.disc")]
tmp2$source <- 'in-sample'
names(tmp2) <- c("approach","data","depth","fair.type","fair.bound","acc","disc",'source')
tmp <- rbind(tmp1,tmp2)
rm(tmp1,tmp2)
tmp <- subset(tmp,tmp$depth ==2)
g1 <- ggplot(data = subset(tmp,tmp$depth ==2),aes(x=(disc)*100, y=acc*100)) +
geom_line(aes(linetype=source), size=3) +
geom_point(aes(color = fair.bound),size=10)+
scale_color_gradient(low="blue", high="red")+
labs(x="Conditional Statisitical Parity (%)", y = "Accuracy (%)", linetype = "Data", color = 'CSP Bound')+
theme(
# plot.title = element_text(size = 25),
axis.text = element_text(size = 30),
legend.position = "right", legend.key.size = unit(1, "cm"),
legend.text = element_text(size = 30),
legend.title = element_text(size = 35),
text = element_text(family=fontfam),
axis.title = element_text(size = 40)
)
print(g1)
if (forpres)
{
ggsave(paste(figure_path,"fig.pdf",sep = ""),device = "pdf", width = 16, height = 12, units =  "in")
} else {
ggsave(paste(figure_path,"fig.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
}
