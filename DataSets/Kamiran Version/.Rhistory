scale_color_manual(values=colors)+
scale_shape_manual(values=shapes)+
theme(legend.position = "right",text = element_text(size=14,family=fontfam)) #14
print(g1)
g2 <- ggplot(data = tmp_gap, aes(x=gap*100, y=numOfInstances, group=Approach,color=Approach)) +
geom_line(size=0.5)+ #aes(linetype=Approach)
geom_point(aes(shape=Approach),size=2)+
labs(x="Gap (%)", y = "Number of Instances Solved")+
scale_color_manual(values=colors)+
scale_shape_manual(values=shapes)+
theme(legend.position = "right",text = element_text(size=14,family=fontfam)) #14
print(g2)
tmp_gap_1 <- tmp_gap
names(tmp_gap_1) <- c("Approach", "X", "numOfInstances")
tmp_gap_1$X <- tmp_gap_1$X*3600 + 3605
tmp_time_1 <- tmp_time
names(tmp_time_1) <- c("Approach", "X", "numOfInstances")
tmp <- rbind(tmp_time_1, tmp_gap_1)
rm(tmp_time_1, tmp_gap_1)
g3 <- ggplot(data = tmp, aes(x=X, y=numOfInstances, group=Approach,color=Approach)) +
geom_line(size=0.5)+ #aes(linetype=Approach)
# geom_point(aes(shape=Approach),size=2)+
geom_vline(xintercept=3605, linetype = "dashed") +
labs(x="     Time (100 sec)    |  Optimality gap (%)", y = "Number of Instances")+
scale_color_manual(values=colors)+
scale_shape_manual(values=shapes)+
scale_x_continuous(breaks=c(0,1200,2400,3600,3605,4505,5405,6305,7205), labels = c("0","12","24","36      ","    0","25","50","75","100"))+
# theme(axis.text = element_text(size = 25),
#       legend.position = "right", legend.key.size = unit(1, "cm"),
#       legend.text = element_text(size = 50),
#       legend.title = element_text(size = 60),
#       text = element_text(family=fontfam),
#       axis.title = element_text(size = 40)) + theme_classic() #14
theme(legend.position = "right",text = element_text(size=20,family=fontfam)) #14
print(g3)
if (forpres)
{
ggsave("perf_opt_presentation_with_reg.pdf",device = "pdf", width = 7, height = 4.62, units =  "in")
} else {
ggsave("perf_opt_with_reg.pdf",device = "pdf", width = 7, height = 4.62, units =  "in")
}
View(data_train)
knitr::opts_chunk$set(echo = TRUE,message = FALSE,warning = FALSE )
library(kableExtra)
library(png)
library(ggplot2)
library(reshape2)
library(egg)
require(tidyr)
library(dplyr)
library(plyr)
library(latex2exp)
# library(ggpubr)
library(data.table)
library(RColorBrewer)
library(MASS)
require(scales)
rm(list=ls())
data_train= read.csv('./../../Results/paper results/train.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
data_test= read.csv('./../../Results/paper results/test.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
forpres=FALSE
if (forpres){
fontfam = "sans"
} else {
fontfam = "serif"
}
figure_path = "./"
data_train$sample <- as.factor(data_train$sample)
data_train$depth <- as.factor(data_train$depth)
data_test$sample <- as.factor(data_test$sample)
data_test$depth <- as.factor(data_test$depth)
#Let's sort the levels of approach such that the oldest method appears first
data_train$approach<- factor(data_train$approach, levels = c("OCT","BinOCT","FlowOCT","BendersOCT"))
data_test$approach<- factor(data_test$approach, levels = c("OCT","BinOCT","FlowOCT","BendersOCT"))
#Let's sort the levels of dataset with respect to their size
data_train$dataset <- factor(data_train$dataset, levels = as.character(unique(data_train[order(data_train$nrow),]$dataset)))
data_test$dataset <- factor(data_test$dataset, levels = as.character(unique(data_train[order(data_train$nrow),]$dataset)))
View(data_test)
summary(data_test$approach)
#######################################################################
#Time data
#######################################################################
tmp <- data_test
#######################################################################
#Time data
#######################################################################
tmp <- data_test
p <- ggplot(tmp, aes(x=approach, y=test_acc)) +
geom_boxplot(outlier.colour="red", outlier.shape=8,
outlier.size=4)+
theme(legend.position = "right",text = element_text(size=20,family=fontfam)) #14
#######################################################################
#Time data
#######################################################################
tmp <- data_test
p <- ggplot(tmp, aes(x=approach, y=test_acc)) +
geom_boxplot(outlier.colour="red", outlier.shape=8,
outlier.size=4)+
labs(x='X_axis_title', y = 'Y_axis_title')+
guides(fill=guide_legend(title="Approach"))+
theme(legend.position = "right",text = element_text(size=20,family=fontfam)) #14
print(p)
p <- ggplot(tmp, aes(x=approach, y=test_acc)) +
geom_boxplot(notch=TRUE, outlier.colour="red", outlier.shape=8,
outlier.size=4)+
labs(x='X_axis_title', y = 'Y_axis_title')+
guides(fill=guide_legend(title="Approach"))+
theme(legend.position = "right",text = element_text(size=20,family=fontfam)) #14
print(p)
p <- ggplot(tmp, aes(x=approach, y=test_acc)) +
geom_boxplot(notch=TRUE)+
labs(x='X_axis_title', y = 'Y_axis_title')+
guides(fill=guide_legend(title="Approach"))+
theme(legend.position = "right",text = element_text(size=20,family=fontfam)) #14
print(p)
p <- ggplot(tmp, aes(x=approach, y=test_acc, fill = approach)) +
geom_boxplot(notch=TRUE)+
labs(x='X_axis_title', y = 'Y_axis_title')+
guides(fill=guide_legend(title="Approach"))+
theme(legend.position = "right",text = element_text(size=20,family=fontfam)) #14
print(p)
p <- ggplot(tmp, aes(x=approach, y=test_acc, fill = approach)) +
geom_boxplot(notch=TRUE)+
labs(x='X_axis_title', y = 'Y_axis_title')+
guides(fill=guide_legend(title="Approach"))+
theme(legend.position = "none",text = element_text(size=20,family=fontfam)) #14
print(p)
p <- ggplot(tmp, aes(x=depth, y=test_acc, fill = approach)) +
geom_boxplot(notch=TRUE)+
labs(x='X_axis_title', y = 'Y_axis_title')+
guides(fill=guide_legend(title="Approach"))+
theme(legend.position = "none",text = element_text(size=20,family=fontfam)) #14
print(p)
p <- ggplot(tmp, aes(x=depth, y=test_acc, fill = approach)) +
geom_boxplot(notch=TRUE)+
labs(x='X_axis_title', y = 'Y_axis_title')+
guides(fill=guide_legend(title="Approach"))+
theme(legend.position = "right",text = element_text(size=20,family=fontfam)) #14
print(p)
if (forpres)
{
ggsave("test_box_plot_pres.pdf",device = "pdf", width = 7, height = 4.62, units =  "in")
} else {
ggsave("test_box_plot",device = "pdf", width = 7, height = 4.62, units =  "in")
}
if (forpres)
{
ggsave("test_box_plot_pres.pdf",device = "pdf", width = 7, height = 4.62, units =  "in")
} else {
ggsave("test_box_plot.pdf",device = "pdf", width = 7, height = 4.62, units =  "in")
}
#######################################################################
#Time data
#######################################################################
tmp <- data_test
p <- ggplot(tmp, aes(x=depth, y=test_acc, fill = approach)) +
geom_boxplot(notch=FALSE)+
labs(x='X_axis_title', y = 'Y_axis_title')+
guides(fill=guide_legend(title="Approach"))+
theme(legend.position = "right",text = element_text(size=20,family=fontfam)) #14
print(p)
if (forpres)
{
ggsave("test_box_plot_pres.pdf",device = "pdf", width = 7, height = 4.62, units =  "in")
} else {
ggsave("test_box_plot.pdf",device = "pdf", width = 7, height = 4.62, units =  "in")
}
12*4.62/7
#######################################################################
#Time data
#######################################################################
tmp <- data_test
p <- ggplot(tmp, aes(x=depth, y=test_acc, fill = approach)) +
geom_boxplot(notch=FALSE)+
labs(x='X_axis_title', y = 'Y_axis_title')+
guides(fill=guide_legend(title="Approach"))+
theme(legend.position = "right",text = element_text(size=20,family=fontfam)) #14
print(p)
if (forpres)
{
ggsave("test_box_plot_pres.pdf",device = "pdf", width = 7, height = 4.62, units =  "in")
} else {
ggsave("test_box_plot.pdf",device = "pdf", width = 12, height = 7.92, units =  "in")
}
12/7*20
4.62*2
#######################################################################
#Time data
#######################################################################
tmp <- data_test
p <- ggplot(tmp, aes(x=depth, y=test_acc, fill = approach)) +
geom_boxplot(notch=FALSE)+
labs(x='X_axis_title', y = 'Y_axis_title')+
guides(fill=guide_legend(title="Approach"))+
theme(legend.position = "right",text = element_text(size=40,family=fontfam)) #14
print(p)
if (forpres)
{
ggsave("test_box_plot_pres.pdf",device = "pdf", width = 7, height = 4.62, units =  "in")
} else {
ggsave("test_box_plot.pdf",device = "pdf", width = 14, height = 9.24, units =  "in")
}
#######################################################################
#Time data
#######################################################################
tmp <- data_test
colors <- c( brewer.pal(4, 'Set1')[3], brewer.pal(4, 'Set1')[2], brewer.pal(4, 'Set1')[4], brewer.pal(4, 'Set1')[1] )
p <- ggplot(tmp, aes(x=depth, y=test_acc, fill = approach)) +
geom_boxplot(notch=FALSE)+
scale_color_manual(values=colors)+
labs(x='X_axis_title', y = 'Y_axis_title')+
guides(fill=guide_legend(title="Approach"))+
theme(legend.position = "right",text = element_text(size=40,family=fontfam)) #14
print(p)
if (forpres)
{
ggsave("test_box_plot_pres.pdf",device = "pdf", width = 7, height = 4.62, units =  "in")
} else {
ggsave("test_box_plot.pdf",device = "pdf", width = 14, height = 9.24, units =  "in")
}
#######################################################################
#Time data
#######################################################################
tmp <- data_test
colors <- c( brewer.pal(4, 'Set1')[3], brewer.pal(4, 'Set1')[1], brewer.pal(4, 'Set1')[4], brewer.pal(4, 'Set1')[2] )
p <- ggplot(tmp, aes(x=depth, y=test_acc, fill = approach)) +
geom_boxplot(notch=FALSE)+
scale_color_manual(values=colors)+
labs(x='X_axis_title', y = 'Y_axis_title')+
guides(fill=guide_legend(title="Approach"))+
theme(legend.position = "right",text = element_text(size=40,family=fontfam)) #14
print(p)
if (forpres)
{
ggsave("test_box_plot_pres.pdf",device = "pdf", width = 7, height = 4.62, units =  "in")
} else {
ggsave("test_box_plot.pdf",device = "pdf", width = 14, height = 9.24, units =  "in")
}
#######################################################################
#Time data
#######################################################################
tmp <- data_test
colors <- c( brewer.pal(4, 'Set1')[3], brewer.pal(4, 'Set1')[1], brewer.pal(4, 'Set1')[4], brewer.pal(4, 'Set1')[2] )
p <- ggplot(tmp, aes(x=depth, y=test_acc, fill = approach,color=approach)) +
geom_boxplot(notch=FALSE)+
scale_color_manual(values=colors)+
labs(x='X_axis_title', y = 'Y_axis_title')+
guides(fill=guide_legend(title="Approach"))+
theme(legend.position = "right",text = element_text(size=40,family=fontfam)) #14
print(p)
# if (forpres)
# {
#   ggsave("test_box_plot_pres.pdf",device = "pdf", width = 7, height = 4.62, units =  "in")
# } else {
#   ggsave("test_box_plot.pdf",device = "pdf", width = 14, height = 9.24, units =  "in")
# }
#######################################################################
#Time data
#######################################################################
tmp <- data_test
colors <- c( brewer.pal(4, 'Set1')[3], brewer.pal(4, 'Set1')[1], brewer.pal(4, 'Set1')[4], brewer.pal(4, 'Set1')[2] )
p <- ggplot(tmp, aes(x=depth, y=test_acc, color=approach)) +
geom_boxplot(notch=FALSE)+
scale_color_manual(values=colors)+
labs(x='X_axis_title', y = 'Y_axis_title')+
guides(fill=guide_legend(title="Approach"))+
theme(legend.position = "right",text = element_text(size=40,family=fontfam)) #14
print(p)
# if (forpres)
# {
#   ggsave("test_box_plot_pres.pdf",device = "pdf", width = 7, height = 4.62, units =  "in")
# } else {
#   ggsave("test_box_plot.pdf",device = "pdf", width = 14, height = 9.24, units =  "in")
# }
#######################################################################
#Time data
#######################################################################
tmp <- data_test
colors <- c( brewer.pal(4, 'Set1')[3], brewer.pal(4, 'Set1')[1], brewer.pal(4, 'Set1')[4], brewer.pal(4, 'Set1')[2] )
p <- ggplot(tmp, aes(x=depth, y=test_acc, fill=approach)) +
geom_boxplot(notch=FALSE)+
scale_color_manual(values=colors)+
labs(x='X_axis_title', y = 'Y_axis_title')+
guides(fill=guide_legend(title="Approach"))+
theme(legend.position = "right",text = element_text(size=40,family=fontfam)) #14
print(p)
# if (forpres)
# {
#   ggsave("test_box_plot_pres.pdf",device = "pdf", width = 7, height = 4.62, units =  "in")
# } else {
#   ggsave("test_box_plot.pdf",device = "pdf", width = 14, height = 9.24, units =  "in")
# }
#######################################################################
#Time data
#######################################################################
tmp <- data_test
colors <- c( brewer.pal(4, 'Set1')[3], brewer.pal(4, 'Set1')[1], brewer.pal(4, 'Set1')[4], brewer.pal(4, 'Set1')[2] )
p <- ggplot(tmp, aes(x=depth, y=test_acc, color=approach)) +
geom_boxplot(notch=FALSE)+
scale_color_manual(values=colors)+
labs(x='X_axis_title', y = 'Y_axis_title')+
guides(fill=guide_legend(title="Approach"))+
theme(legend.position = "right",text = element_text(size=40,family=fontfam)) #14
print(p)
# if (forpres)
# {
#   ggsave("test_box_plot_pres.pdf",device = "pdf", width = 7, height = 4.62, units =  "in")
# } else {
#   ggsave("test_box_plot.pdf",device = "pdf", width = 14, height = 9.24, units =  "in")
# }
#######################################################################
#Time data
#######################################################################
tmp <- data_test
colors <- c( brewer.pal(4, 'Set1')[2], brewer.pal(4, 'Set1')[4], brewer.pal(4, 'Set1')[1], brewer.pal(4, 'Set1')[3] )
p <- ggplot(tmp, aes(x=depth, y=test_acc, color=approach)) +
geom_boxplot(notch=FALSE)+
scale_color_manual(values=colors)+
labs(x='X_axis_title', y = 'Y_axis_title')+
guides(fill=guide_legend(title="Approach"))+
theme(legend.position = "right",text = element_text(size=40,family=fontfam)) #14
print(p)
# if (forpres)
# {
#   ggsave("test_box_plot_pres.pdf",device = "pdf", width = 7, height = 4.62, units =  "in")
# } else {
#   ggsave("test_box_plot.pdf",device = "pdf", width = 14, height = 9.24, units =  "in")
# }
#######################################################################
#Time data
#######################################################################
tmp <- data_test
colors <- c( brewer.pal(4, 'Set1')[1], brewer.pal(4, 'Set1')[4], brewer.pal(4, 'Set1')[2], brewer.pal(4, 'Set1')[3] )
p <- ggplot(tmp, aes(x=depth, y=test_acc, color=approach)) +
geom_boxplot(notch=FALSE)+
scale_color_manual(values=colors)+
labs(x='X_axis_title', y = 'Y_axis_title')+
guides(fill=guide_legend(title="Approach"))+
theme(legend.position = "right",text = element_text(size=40,family=fontfam)) #14
print(p)
# if (forpres)
# {
#   ggsave("test_box_plot_pres.pdf",device = "pdf", width = 7, height = 4.62, units =  "in")
# } else {
#   ggsave("test_box_plot.pdf",device = "pdf", width = 14, height = 9.24, units =  "in")
# }
#######################################################################
#Time data
#######################################################################
tmp <- data_test
colors <- c( brewer.pal(4, 'Set1')[1], brewer.pal(4, 'Set1')[4], brewer.pal(4, 'Set1')[2], brewer.pal(4, 'Set1')[3] )
p <- ggplot(tmp, aes(x=depth, y=test_acc, fill=approach)) +
geom_boxplot(notch=FALSE)+
scale_color_manual(values=colors)+
labs(x='X_axis_title', y = 'Y_axis_title')+
guides(fill=guide_legend(title="Approach"))+
theme(legend.position = "right",text = element_text(size=40,family=fontfam)) #14
print(p)
# if (forpres)
# {
#   ggsave("test_box_plot_pres.pdf",device = "pdf", width = 7, height = 4.62, units =  "in")
# } else {
#   ggsave("test_box_plot.pdf",device = "pdf", width = 14, height = 9.24, units =  "in")
# }
#######################################################################
#Time data
#######################################################################
tmp <- data_test
colors <- c( brewer.pal(4, 'Set1')[1], brewer.pal(4, 'Set1')[4], brewer.pal(4, 'Set1')[2], brewer.pal(4, 'Set1')[3] )
p <- ggplot(tmp, aes(x=depth, y=test_acc, fill=approach)) +
geom_boxplot(notch=FALSE)+
scale_fill_brewer(values=colors)+
labs(x='X_axis_title', y = 'Y_axis_title')+
guides(fill=guide_legend(title="Approach"))+
theme(legend.position = "right",text = element_text(size=40,family=fontfam)) #14
#######################################################################
#Time data
#######################################################################
tmp <- data_test
colors <- c( brewer.pal(4, 'Set1')[1], brewer.pal(4, 'Set1')[4], brewer.pal(4, 'Set1')[2], brewer.pal(4, 'Set1')[3] )
p <- ggplot(tmp, aes(x=depth, y=test_acc, fill=approach)) +
geom_boxplot(notch=FALSE)+
scale_fill_brewer(palette=colors)+
labs(x='X_axis_title', y = 'Y_axis_title')+
guides(fill=guide_legend(title="Approach"))+
theme(legend.position = "right",text = element_text(size=40,family=fontfam)) #14
print(p)
# if (forpres)
# {
#   ggsave("test_box_plot_pres.pdf",device = "pdf", width = 7, height = 4.62, units =  "in")
# } else {
#   ggsave("test_box_plot.pdf",device = "pdf", width = 14, height = 9.24, units =  "in")
# }
#######################################################################
#Time data
#######################################################################
tmp <- data_test
colors <- c( brewer.pal(4, 'Set1')[1], brewer.pal(4, 'Set1')[4], brewer.pal(4, 'Set1')[2], brewer.pal(4, 'Set1')[3] )
p <- ggplot(tmp, aes(x=depth, y=test_acc, fill=approach)) +
geom_boxplot(notch=FALSE)+
scale_fill_manual(values=colors)+
labs(x='X_axis_title', y = 'Y_axis_title')+
guides(fill=guide_legend(title="Approach"))+
theme(legend.position = "right",text = element_text(size=40,family=fontfam)) #14
print(p)
# if (forpres)
# {
#   ggsave("test_box_plot_pres.pdf",device = "pdf", width = 7, height = 4.62, units =  "in")
# } else {
#   ggsave("test_box_plot.pdf",device = "pdf", width = 14, height = 9.24, units =  "in")
# }
knitr::opts_chunk$set(echo = TRUE,message = FALSE,warning = FALSE )
library(kableExtra)
library(png)
library(ggplot2)
library(reshape2)
library(egg)
require(tidyr)
library(dplyr)
library(plyr)
library(latex2exp)
# library(ggpubr)
library(data.table)
library(RColorBrewer)
library(MASS)
require(scales)
rm(list=ls())
data_train= read.csv('./../../Results/paper results/train.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
data_test= read.csv('./../../Results/paper results/test.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
forpres=FALSE
if (forpres){
fontfam = "sans"
} else {
fontfam = "serif"
}
figure_path = "./"
data_train$sample <- as.factor(data_train$sample)
data_train$depth <- as.factor(data_train$depth)
data_test$sample <- as.factor(data_test$sample)
data_test$depth <- as.factor(data_test$depth)
#Let's sort the levels of approach such that the oldest method appears first
data_train$approach<- factor(data_train$approach, levels = c("OCT","BinOCT","FlowOCT","BendersOCT"))
data_test$approach<- factor(data_test$approach, levels = c("OCT","BinOCT","FlowOCT","BendersOCT"))
#Let's sort the levels of dataset with respect to their size
data_train$dataset <- factor(data_train$dataset, levels = as.character(unique(data_train[order(data_train$nrow),]$dataset)))
data_test$dataset <- factor(data_test$dataset, levels = as.character(unique(data_train[order(data_train$nrow),]$dataset)))
#######################################################################
#Time data
#######################################################################
tmp <- data_test
colors <- c( brewer.pal(4, 'Set1')[1], brewer.pal(4, 'Set1')[4], brewer.pal(4, 'Set1')[2], brewer.pal(4, 'Set1')[3] )
p <- ggplot(tmp, aes(x=depth, y=test_acc, fill=approach)) +
geom_boxplot(notch=FALSE)+
scale_fill_manual(values=colors)+
labs(x='Depth', y = 'Out-of-Sample Accuracy')+
guides(fill=guide_legend(title="Approach"))+
theme(legend.position = "right",text = element_text(size=14,family=fontfam)) #14
print(p)
# if (forpres)
# {
#   ggsave("test_box_plot_pres.pdf",device = "pdf", width = 7, height = 4.62, units =  "in")
# } else {
#   ggsave("test_box_plot.pdf",device = "pdf", width = 14, height = 9.24, units =  "in")
# }
#######################################################################
#Time data
#######################################################################
tmp <- data_test
colors <- c( brewer.pal(4, 'Set1')[1], brewer.pal(4, 'Set1')[4], brewer.pal(4, 'Set1')[2], brewer.pal(4, 'Set1')[3] )
p <- ggplot(tmp, aes(x=depth, y=test_acc, fill=approach)) +
geom_boxplot(notch=FALSE)+
scale_fill_manual(values=colors)+
labs(x='Depth', y = 'Out-of-Sample Accuracy')+
guides(fill=guide_legend(title="Approach"))+
theme(legend.position = "right",text = element_text(size=40,family=fontfam)) #14
print(p)
# if (forpres)
# {
#   ggsave("test_box_plot_pres.pdf",device = "pdf", width = 7, height = 4.62, units =  "in")
# } else {
#   ggsave("test_box_plot.pdf",device = "pdf", width = 14, height = 9.24, units =  "in")
# }
if (forpres)
{
ggsave("test_box_plot_pres.pdf",device = "pdf", width = 7, height = 4.62, units =  "in")
} else {
ggsave("test_box_plot.pdf",device = "pdf", width = 14, height = 9.24, units =  "in")
}
if (forpres)
{
ggsave("test_box_plot_pres.pdf",device = "pdf", width = 7, height = 4.62, units =  "in")
} else {
ggsave("test_box_plot.pdf",device = "pdf", width = 18, height = 9.24, units =  "in")
}
#######################################################################
#Time data
#######################################################################
tmp <- data_test
colors <- c( brewer.pal(4, 'Set1')[1], brewer.pal(4, 'Set1')[4], brewer.pal(4, 'Set1')[2], brewer.pal(4, 'Set1')[3] )
p <- ggplot(tmp, aes(x=depth, y=test_acc, fill=approach)) +
geom_boxplot(notch=FALSE)+
scale_fill_manual(values=colors)+
labs(x='Depth', y = 'Out-of-Sample Accuracy')+
guides(fill=guide_legend(title="Approach"))+
theme(legend.position = "right",text = element_text(size=35,family=fontfam)) #14
print(p)
if (forpres)
{
ggsave("test_box_plot_pres.pdf",device = "pdf", width = 7, height = 4.62, units =  "in")
} else {
ggsave("test_box_plot.pdf",device = "pdf", width = 18, height = 9.24, units =  "in")
}
