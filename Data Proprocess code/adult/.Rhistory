#if a feature has only two levels we should only keep one column
#As our convention, we always keep the first one
cols = c()
tmp <- gsub("\\..*","",names( data_enc ))
names(data_enc)
#if a feature has only two levels we should only keep one column
#As our convention, we always keep the first one
cols = c()
tmp <- gsub("\\..*","",names( data_enc ))
for(name in names(data)){
# a = grepl( name , tmp ,fixed=TRUE)
a = tmp == name
if(sum(a)==2){
cols <- append(cols, min(which(a == TRUE)))
}else{
cols <- append(cols, which(a == TRUE))
}
}
data_enc <- data_enc[,cols]
data_enc$target <- data$target
names(data_enc)
# Taking care of  the integer columns : If x_ij = 1 then x_i(j+1) should be one as well  for odd i's
features = c('fnlwgt','hours_per_week','capital','age_group')
for(v in features){
for(i in seq(2,nlevels(data[[v]]),1)){
a =  as.numeric(as.character(data_enc[[paste(v,toString(i),sep = ".")]]))
b =  as.numeric(as.character(data_enc[[paste(v,toString(i-1),sep = ".")]]))
data_enc[[paste(v,toString(i),sep = ".")]] =  as.numeric(a|b)
}
}
View(data_enc)
head(data_enc)
View(data)
View(data_enc)
names(data)
names(data_enc)
write.csv(data,"adult.csv",row.names = FALSE)
write.csv(data_enc,"adult_enc.csv",row.names = FALSE)
for(Run in c(1,2,3,4,5)){
set.seed(seeds[Run])
##########################################################################################################
# Splitting data into training and test
##########################################################################################################
smp_size = 8000
## set the seed to make your partition reproducible
sample_ind <- sample(seq_len(nrow(data)), size = smp_size)
data_sample <- data[sample_ind, ]
data_sample_enc <- data_enc[sample_ind, ]
# Save files
write.csv(data_sample,paste("adult_sample_",toString(Run),".csv",sep=''),row.names = FALSE)
write.csv(data_sample_enc,paste("adult_sample_enc_",toString(Run),".csv",sep=''),row.names = FALSE)
}
# Choose the seeds
seeds = c(123,156,67,1,43)
for(Run in c(1,2,3,4,5)){
set.seed(seeds[Run])
##########################################################################################################
# Splitting data into training and test
##########################################################################################################
smp_size = 8000
## set the seed to make your partition reproducible
sample_ind <- sample(seq_len(nrow(data)), size = smp_size)
data_sample <- data[sample_ind, ]
data_sample_enc <- data_enc[sample_ind, ]
# Save files
write.csv(data_sample,paste("adult_sample_",toString(Run),".csv",sep=''),row.names = FALSE)
write.csv(data_sample_enc,paste("adult_sample_enc_",toString(Run),".csv",sep=''),row.names = FALSE)
}
View(data_sample)
View(data_sample_enc)
View(data)
summary(data)
View(data_enc)
knitr::opts_chunk$set(echo = TRUE,message = FALSE,warning = FALSE )
library(kableExtra)
library(png)
library(ggplot2)
library(reshape2)
library(egg)
require(tidyr)
require(dplyr)
library(dplyr)
library(latex2exp)
# library(ggpubr)
library(data.table)
library(RColorBrewer)
library(MASS)
require(scales)
rm(list=ls())
data= read.csv('./../Results/FairOCT_COMPAS_10800_May_5.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
forpres=TRUE
if (forpres){
fontfam = "sans"
} else {
fontfam = "serif"
}
figure_path = "./"
data$sample <- as.factor(data$sample)
data$depth <- as.factor(data$depth)
data$fair.type <- as.factor(data$fair.type)
data$fair.bound <- as.factor(data$fair.bound)
for(i in c('SP','CSP','PE','EOpp','EOdds')){
tmp_none <- data[data$fair.type == 'None',]
tmp_none$fair.type = i
data = rbind(data,tmp_none)
}
data <- data[data$fair.type!= 'None',]
rm(tmp_none)
tmp <- data
tmp <- tmp %>%
group_by(approach,data,depth, fair.type, fair.bound) %>%
summarise(mean(train.acc),mean(test.acc),mean(sp.train.data), mean(sp.train.pred),
mean(sp.test.data),mean(sp.test.pred),
mean(csp.train.data), mean(csp.train.pred),
mean(csp.test.data),mean(csp.test.pred),
mean(pe.train.data), mean(pe.train.pred),
mean(pe.test.data),mean(pe.test.pred),
mean(EOpp.train.data), mean(EOpp.train.pred),
mean(EOpp.test.data),mean(EOpp.test.pred))
names(tmp) <- c("approach","data","depth","fair.type","fair.bound","train.acc",'test.acc',
"train.data.sp","train.pred.sp","test.data.sp","test.pred.sp",
"train.data.csp","train.pred.csp","test.data.csp","test.pred.csp",
"train.data.pe","train.pred.pe","test.data.pe","test.pred.pe",
"train.data.EOpp","train.pred.EOpp","test.data.EOpp","test.pred.EOpp")
tmp <- tmp[c("approach","data","depth","fair.type","fair.bound","train.acc",
'train.pred.sp','train.pred.csp','train.pred.pe','train.pred.EOpp')]
tmp <- melt(tmp, id.vars=c("approach","data","depth","fair.type","fair.bound",'train.acc'))
View(tmp)
summary(data$fair.type)
summary(tmp$variable)
View(tmp)
g1 <- ggplot(data = subset(tmp,tmp$depth ==2), aes(x=(1-value)*100, y=train.acc*100)) +
geom_point()+
geom_text(aes(label = fair.bound),
vjust = "inward", hjust = "inward",check_overlap = TRUE, nudge_y = 1.4,
show.legend = FALSE,size = 4) +
geom_line() +
facet_grid(vars(fair.type), vars(variable))
print(g1)
if (forpres)
{
ggsave(paste(figure_path,"tmp.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
} else {
ggsave(paste(figure_path,"tmp.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
}
g1 <- ggplot(data = subset(tmp,tmp$depth ==2), aes(x=(1-value)*100, y=train.acc*100)) +
geom_point()+
geom_text(aes(label = fair.bound),
vjust = "inward", hjust = "inward",check_overlap = TRUE, nudge_y = 1.4,
show.legend = FALSE,size = 1) +
geom_line() +
facet_grid(vars(fair.type), vars(variable))
print(g1)
if (forpres)
{
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
} else {
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
}
g1 <- ggplot(data = subset(tmp,tmp$depth ==2), aes(x=(1-value)*100, y=train.acc*100)) +
geom_point()+
geom_text(aes(label = fair.bound),
vjust = "inward", hjust = "inward",check_overlap = TRUE, nudge_y = 1.4,
show.legend = FALSE,size = 3) +
geom_line() +
facet_grid(vars(fair.type), vars(variable))
print(g1)
if (forpres)
{
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
} else {
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
}
g1 <- ggplot(data = subset(tmp,tmp$depth ==2), aes(x=(1-value)*100, y=train.acc*100)) +
geom_point()+
geom_text(aes(label = fair.bound),
vjust = "inward", hjust = "inward",check_overlap = TRUE, nudge_y = 2,
show.legend = FALSE,size = 3) +
geom_line() +
facet_grid(vars(fair.type), vars(variable))
print(g1)
if (forpres)
{
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
} else {
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
}
g1 <- ggplot(data = subset(tmp,tmp$depth ==2), aes(x=(1-value)*100, y=train.acc*100)) +
geom_point()+
geom_text(aes(label = fair.bound),
vjust = "inward", hjust = "inward",check_overlap = TRUE, nudge_y = 2.5,
show.legend = FALSE,size = 3) +
geom_line() +
facet_grid(vars(fair.type), vars(variable))
print(g1)
if (forpres)
{
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
} else {
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
}
g1 <- ggplot(data = subset(tmp,tmp$depth ==2), aes(x=(1-value)*100, y=train.acc*100)) +
geom_point()+
geom_text(aes(label = fair.bound),
vjust = "inward", hjust = "inward",check_overlap = TRUE, nudge_y = 2.5,nudge_x = 2.5,
show.legend = FALSE,size = 3) +
geom_line() +
facet_grid(vars(fair.type), vars(variable))
print(g1)
if (forpres)
{
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
} else {
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
}
g1 <- ggplot(data = subset(tmp,tmp$depth ==2), aes(x=(1-value)*100, y=train.acc*100)) +
geom_point()+
geom_text(aes(label = fair.bound),
vjust = "inward", hjust = "inward",check_overlap = TRUE, nudge_y = 2.5,nudge_x = -2.5,
show.legend = FALSE,size = 3) +
geom_line() +
facet_grid(vars(fair.type), vars(variable))
print(g1)
if (forpres)
{
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
} else {
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
}
g1 <- ggplot(data = subset(tmp,tmp$depth ==2), aes(x=(1-value)*100, y=train.acc*100)) +
geom_point()+
geom_text(aes(label = fair.bound),
vjust = "inward", hjust = "inward",check_overlap = TRUE, nudge_y = 3,nudge_x = -2.5,
show.legend = FALSE,size = 3) +
geom_line() +
facet_grid(vars(fair.type), vars(variable))
print(g1)
if (forpres)
{
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
} else {
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
}
g1 <- ggplot(data = subset(tmp,tmp$depth ==2), aes(x=(1-value)*100, y=train.acc*100)) +
geom_point()+
geom_text(aes(label = fair.bound),
vjust = "inward", hjust = "inward",check_overlap = TRUE, nudge_y = 5,nudge_x = -2.5,
show.legend = FALSE,size = 3) +
geom_line() +
facet_grid(vars(fair.type), vars(variable))
print(g1)
if (forpres)
{
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
} else {
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
}
g1 <- ggplot(data = subset(tmp,tmp$depth ==2), aes(x=(1-value)*100, y=train.acc*100)) +
geom_point()+
geom_text(aes(label = fair.bound),
vjust = "inward", hjust = "inward",check_overlap = TRUE, nudge_y = 5,nudge_x = -4,
show.legend = FALSE,size = 3) +
geom_line() +
facet_grid(vars(fair.type), vars(variable))
print(g1)
if (forpres)
{
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
} else {
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
}
g1 <- ggplot(data = subset(tmp,tmp$depth ==2), aes(x=(1-value)*100, y=train.acc*100)) +
geom_point()+
geom_text(aes(label = fair.bound),
vjust = "inward", hjust = "inward",check_overlap = TRUE, nudge_y = 5,nudge_x = 4,
show.legend = FALSE,size = 3) +
geom_line() +
facet_grid(vars(fair.type), vars(variable))
print(g1)
if (forpres)
{
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
} else {
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
}
g1 <- ggplot(data = subset(tmp,tmp$depth ==2), aes(x=(1-value)*100, y=train.acc*100)) +
geom_point()+
geom_text(aes(label = fair.bound),
vjust = "inward", hjust = "inward",check_overlap = TRUE, nudge_y = 5,nudge_x = 4,
show.legend = FALSE,size = 3) +
geom_line(aes(color = variable)) +
facet_grid(vars(fair.type), vars(variable))
print(g1)
if (forpres)
{
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
} else {
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
}
g1 <- ggplot(data = subset(tmp,tmp$depth ==2), aes(x=(1-value)*100, y=train.acc*100)) +
geom_point(size = fair.bound)+
geom_text(aes(label = fair.bound),
vjust = "inward", hjust = "inward",check_overlap = TRUE, nudge_y = 5,nudge_x = 4,
show.legend = FALSE,size = 3) +
geom_line(aes(color = variable)) +
facet_grid(vars(fair.type), vars(variable))
g1 <- ggplot(data = subset(tmp,tmp$depth ==2), aes(x=(1-value)*100, y=train.acc*100)) +
geom_point(aes(size = fair.bound))+
geom_text(aes(label = fair.bound),
vjust = "inward", hjust = "inward",check_overlap = TRUE, nudge_y = 5,nudge_x = 4,
show.legend = FALSE,size = 3) +
geom_line(aes(color = variable)) +
facet_grid(vars(fair.type), vars(variable))
print(g1)
if (forpres)
{
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
} else {
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
}
g1 <- ggplot(data = subset(tmp,tmp$depth ==2), aes(x=(1-value)*100, y=train.acc*100)) +
geom_point(aes(size = fair.bound))+
# geom_text(aes(label = fair.bound),
#           vjust = "inward", hjust = "inward",check_overlap = TRUE, nudge_y = 5,nudge_x = 4,
#           show.legend = FALSE,size = 3) +
geom_line(aes(color = variable)) +
facet_grid(vars(fair.type), vars(variable))
print(g1)
if (forpres)
{
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
} else {
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
}
g1 <- ggplot(data = subset(tmp,tmp$depth ==2), aes(x=(1-value)*100, y=train.acc*100)) +
geom_point()+#aes(size = fair.bound)
# geom_text(aes(label = fair.bound),
#           vjust = "inward", hjust = "inward",check_overlap = TRUE, nudge_y = 5,nudge_x = 4,
#           show.legend = FALSE,size = 3) +
geom_line(aes(color = variable)) +
facet_grid(vars(fair.type), vars(variable))
print(g1)
if (forpres)
{
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
} else {
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
}
g1 <- ggplot(data = subset(tmp,tmp$depth ==2), aes(x=(1-value)*100, y=train.acc*100)) +
# geom_point()+#aes(size = fair.bound)
# geom_text(aes(label = fair.bound),
#           vjust = "inward", hjust = "inward",check_overlap = TRUE, nudge_y = 5,nudge_x = 4,
#           show.legend = FALSE,size = 3) +
geom_line(aes(color = variable)) +
facet_grid(vars(fair.type), vars(variable))
print(g1)
if (forpres)
{
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
} else {
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
}
g1 <- ggplot(data = subset(tmp,tmp$depth ==2), aes(x=(1-value)*100, y=train.acc*100)) +
geom_point(aes(size = 1))+#aes(size = fair.bound)
# geom_text(aes(label = fair.bound),
#           vjust = "inward", hjust = "inward",check_overlap = TRUE, nudge_y = 5,nudge_x = 4,
#           show.legend = FALSE,size = 3) +
geom_line(aes(color = variable)) +
facet_grid(vars(fair.type), vars(variable))
print(g1)
if (forpres)
{
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
} else {
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
}
g1 <- ggplot(data = subset(tmp,tmp$depth ==2), aes(x=(1-value)*100, y=train.acc*100)) +
geom_point()+#aes(size = fair.bound)
# geom_text(aes(label = fair.bound),
#           vjust = "inward", hjust = "inward",check_overlap = TRUE, nudge_y = 5,nudge_x = 4,
#           show.legend = FALSE,size = 3) +
geom_line(aes(color = variable)) +
facet_grid(vars(fair.type), vars(variable))
print(g1)
if (forpres)
{
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
} else {
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
}
g1 <- ggplot(data = subset(tmp,tmp$depth ==2), aes(x=(1-value)*100, y=train.acc*100)) +
geom_point()+#aes(size = fair.bound)
# geom_text(aes(label = fair.bound),
#           vjust = "inward", hjust = "inward",check_overlap = TRUE, nudge_y = 5,nudge_x = 4,
#           show.legend = FALSE,size = 3) +
geom_line(aes(color = variable)) +
facet_grid(vars(fair.type), vars(variable))+
labs(x="Fairness (%)", y = "Accuracy (%)", linetype = "Constraint")+
print(g1)
g1 <- ggplot(data = subset(tmp,tmp$depth ==2), aes(x=(1-value)*100, y=train.acc*100)) +
geom_point()+#aes(size = fair.bound)
# geom_text(aes(label = fair.bound),
#           vjust = "inward", hjust = "inward",check_overlap = TRUE, nudge_y = 5,nudge_x = 4,
#           show.legend = FALSE,size = 3) +
geom_line(aes(color = variable)) +
facet_grid(vars(fair.type), vars(variable))+
labs(x="Fairness (%)", y = "Accuracy (%)", linetype = "Constraint")
print(g1)
if (forpres)
{
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
} else {
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
}
g1 <- ggplot(data = subset(tmp,tmp$depth ==2), aes(x=(1-value)*100, y=train.acc*100)) +
geom_point()+#aes(size = fair.bound)
# geom_text(aes(label = fair.bound),
#           vjust = "inward", hjust = "inward",check_overlap = TRUE, nudge_y = 5,nudge_x = 4,
#           show.legend = FALSE,size = 3) +
geom_line(aes(color = variable)) +
facet_grid(vars(fair.type), vars(variable))+
labs(x="Fairness (%)", y = "Accuracy (%)", linetype = "Constraint")+
theme(
# plot.title = element_text(size = 25),
axis.text = element_text(size = 25),
legend.position = "right", legend.key.size = unit(1, "cm"),
legend.text = element_text(size = 27),
legend.title = element_text(size = 30),
text = element_text(family=fontfam),
axis.title = element_text(size = 29)
)
print(g1)
if (forpres)
{
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
} else {
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
}
g1 <- ggplot(data = subset(tmp,tmp$depth ==2), aes(x=(1-value)*100, y=train.acc*100)) +
geom_point()+#aes(size = fair.bound)
# geom_text(aes(label = fair.bound),
#           vjust = "inward", hjust = "inward",check_overlap = TRUE, nudge_y = 5,nudge_x = 4,
#           show.legend = FALSE,size = 3) +
geom_line(aes(color = variable)) +
facet_grid(vars(fair.type), vars(variable))+
labs(x="Fairness (%)", y = "Accuracy (%)", linetype = "Constraint")+
theme(
# plot.title = element_text(size = 25),
axis.title = element_text(size = 29)
)
print(g1)
if (forpres)
{
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
} else {
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
}
tmp <- data
tmp <- tmp %>%
group_by(approach,data,depth, fair.type, fair.bound) %>%
summarise(mean(train.acc),mean(test.acc),mean(sp.train.data), mean(sp.train.pred),
mean(sp.test.data),mean(sp.test.pred),
mean(csp.train.data), mean(csp.train.pred),
mean(csp.test.data),mean(csp.test.pred),
mean(pe.train.data), mean(pe.train.pred),
mean(pe.test.data),mean(pe.test.pred),
mean(EOpp.train.data), mean(EOpp.train.pred),
mean(EOpp.test.data),mean(EOpp.test.pred))
names(tmp) <- c("approach","data","depth","fair.type","fair.bound","train.acc",'test.acc',
"train.data.sp","train.pred.sp","test.data.sp","test.pred.sp",
"train.data.csp","train.pred.csp","test.data.csp","test.pred.csp",
"train.data.pe","train.pred.pe","test.data.pe","test.pred.pe",
"train.data.EOpp","train.pred.EOpp","test.data.EOpp","test.pred.EOpp")
# tmp <- tmp[c("approach","data","depth","fair.type","fair.bound","train.acc",
#              'train.pred.sp','train.pred.csp','train.pred.pe','train.pred.EOpp')]
#
# tmp <- melt(tmp, id.vars=c("approach","data","depth","fair.type","fair.bound",'train.acc'))
tmp <- tmp[c("approach","data","depth","fair.type","fair.bound","test.acc",
'test.pred.sp','test.pred.csp','test.pred.pe','test.pred.EOpp')]
tmp <- melt(tmp, id.vars=c("approach","data","depth","fair.type","fair.bound",'test.acc'))
g1 <- ggplot(data = subset(tmp,tmp$depth ==2), aes(x=(1-value)*100, y=train.acc*100)) +
geom_point()+#aes(size = fair.bound)
# geom_text(aes(label = fair.bound),
#           vjust = "inward", hjust = "inward",check_overlap = TRUE, nudge_y = 5,nudge_x = 4,
#           show.legend = FALSE,size = 3) +
geom_line(aes(color = variable)) +
facet_grid(vars(fair.type), vars(variable))+
labs(x="Fairness (%)", y = "Accuracy (%)", linetype = "Constraint")+
theme(
# plot.title = element_text(size = 25),
axis.title = element_text(size = 29)
)
print(g1)
g1 <- ggplot(data = subset(tmp,tmp$depth ==2), aes(x=(1-value)*100, y=test.acc*100)) +
geom_point()+#aes(size = fair.bound)
# geom_text(aes(label = fair.bound),
#           vjust = "inward", hjust = "inward",check_overlap = TRUE, nudge_y = 5,nudge_x = 4,
#           show.legend = FALSE,size = 3) +
geom_line(aes(color = variable)) +
facet_grid(vars(fair.type), vars(variable))+
labs(x="Fairness (%)", y = "Accuracy (%)", linetype = "Constraint")+
theme(
# plot.title = element_text(size = 25),
axis.title = element_text(size = 29)
)
print(g1)
if (forpres)
{
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
} else {
ggsave(paste(figure_path,"grid_train.pdf",sep = ""),device = "pdf", width = 12, height = 8, units =  "in")
}
